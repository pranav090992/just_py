-- Query 1: Extract dump of reports from batch and report table based on FIUREID passed (Oracle SQL) using batch table

-- Filters include:
-- 1) To include/exclude isolated reports
-- 2) To include/exclude deleted and replaced reports
-- 3) To check report format type from STR,CTR,etc
-- 4) To include/exclude GOS with character limit less than 500

select coalesce(rr.recategory,b.recategory) as recategory,b.fiureid,coalesce(rr.entityname,b.entityname) as entityname,B.BATCHID,R.RPTSERNUM,r.mainpersonname,  r.GROUNDSOFSUSP,b.reporttype  from fincorebackup1.BATCH b
inner join fincorebackup1.report r
on b.batchid=r.batchid and b.fiureid in ('BAOTH00016','FICSO00029','BAOTH00011') --enter fiureid here

left join  FINCORE_PHASE2.re rr on rr.fiureid=b.fiureid
left join  FINCORE_PHASE2.recategory rc on rc.recategory=rr.recategory
--where b.batchid not in (select distinct originalbatchid from fincorebackup1.batch  union select distinct batchid from fincorebackup1.batch b2 where  batchtype ='D') 
--WHERE (b.batchid,r.RPTSERNUM) not in (select distinct batchid,REPORTSERIALNUM from fincore_phase2.casecontrol where status in ('E','I','H'))
--where b.reporttype = 'STR'
--and length(r.GROUNDSOFSUSP)< 500

group by coalesce(rr.recategory,b.recategory), b.fiureid  ,coalesce(rr.entityname,b.entityname),B.BATCHID,R.RPTSERNUM,r.GROUNDSOFSUSP,b.reporttype

---------------------------------------------------
-- Query 2: Extract new,replaced and deleted batches and reports from batch and report table based on FIUREID passed (Oracle SQL) using brgate table

-- Filters include:
-- 1) To include/exclude isolated reports
-- 2) To include/exclude deleted and replaced reports

select fiureid,wm_concat(distinct entityname)entityname,wm_concat(distinct recategory)recategory,--wm_concat(distinct recategorydesc)entityname,
sum(case when batchTYPE='N' then Batch_Count  else 0 end) as new_batch,
sum(case when batchTYPE='N' then Report_Count  else 0 end) as new_report,
sum(case when batchTYPE='R' then Batch_Count  else 0 end) as Replaced_batch,
sum(case when batchTYPE='R' then Report_Count  else 0 end) as Replaced_report,
sum(case when batchTYPE='D' then Batch_Count  else 0 end) as Deleted_batch,
sum(case when batchTYPE='D' then Report_Count  else 0 end) as Deleted_report

from
(

select b.fiureid,b.entityname, b.recategory,rc.recategorydesc, batchtype,count(distinct b.batchid) batch_count, count(distinct b.batchid||rptsernum)report_count from fincorebackup1.brgate b
inner join fincorebackup1.report r on b.batchid=r.batchid and b.fiureid in ('FICSO00029','FINBF01107','FINBF05843','FICSO00033') --enter fiureid here
left join  FINCORE_PHASE2.recategory rc on rc.recategory=b.fiureid
--where fiureid not in ( 'XXXXX00001', 'XXXXX99999','XXXXXXXXXX') 
--and b.batchid not in (select originalbatchid from fincorebackup1.batch where batchtype in ('D','R') union select batchid from fincorebackup1.batch b2 where  batchtype ='D') 
--and b. batchid not in (select distinct batchid from fincore_phase2.casecontrol where status in ('E','I','H'))
--from fincorebackup1.batch b

group by b.fiureid,b.entityname, b.recategory, b.batchtype,rc.recategorydesc 
)tab1
group by fiureid

-----------------------------------------------------------------
--Query 3: Give Year on Year(YoY) breakup for all types of reports filed based on FIUREID passed (Oracle SQL) using brgate table

-- Filters include:
-- 1) To include/exclude isolated reports
-- 2) To include/exclude deleted and replaced reports


select fiureid,wm_concat(distinct entityname)entityname,wm_concat(distinct recategory)recategory,wm_concat(distinct recategorydesc)entityname,

sum(case when REPORTTYPE='STR' and yr=21 then report_count  else 0 end) as STR_21,
sum(case when REPORTTYPE='EFT' and yr=21 then report_count  else 0 end) as EFT_21,
sum(case when REPORTTYPE='NTR' and yr=21 then report_count  else 0 end) as NTR_21,
sum(case when REPORTTYPE='CTR' and yr=21 then report_count  else 0 end) as CTR_21,
sum(case when REPORTTYPE='CCR' and yr=21 then report_count  else 0 end) as CCR_21,
sum(case when REPORTTYPE='STR' and yr=22 then report_count  else 0 end) as STR_22,
sum(case when REPORTTYPE='EFT' and yr=22 then report_count  else 0 end) as EFT_22,
sum(case when REPORTTYPE='NTR' and yr=22 then report_count  else 0 end) as NTR_22,
sum(case when REPORTTYPE='CTR' and yr=22 then report_count  else 0 end) as CTR_22,
sum(case when REPORTTYPE='CCR' and yr=22 then report_count  else 0 end) as CCR_22
from
(

select b.fiureid,b.entityname, b.recategory,rc.recategorydesc,substr(b.batchid,1,2) yr, b.batchtype,b.reporttype,count(distinct b.batchid) batch_count, count(distinct b.batchid||r.rptsernum)report_count
from fincorebackup1.brgate b
inner join fincorebackup1.report r on b.batchid=r.batchid and fiureid in () --enter fiureid here
left join  FINCORE_PHASE2.recategory rc on rc.recategory=b.fiureid
--where (b.batchid,r.rptsernum) not in (select distinct batchid,reportserialnum from fincore_phase2.casecontrol cs where status in ('E','I','H'))
--and b.batchid not in (select originalbatchid from fincorebackup1.batch where batchtype in ('D','R') union select batchid from fincorebackup1.batch b2 where  batchtype ='D') 
group by b.fiureid,b.entityname, b.recategory, b.batchtype,rc.recategorydesc,substr(b.batchid,1,2),b.reporttype
)tab1
group by fiureid

-----------------------------------------------------------------
-- Query 4: Give details related to PO like email,mobile number, number of digits in mobile number RE based on FIUREID passed (Oracle SQL) using batch table

select distinct fiureid,entityname,recategory, PONAME, POMOBILE, length(POMOBILE),POEMAIL from fincorebackup1.batch
where fiureid='FICSO00045' --enter fiureid here

----------------------------------------------------------------
--Query 5: Breakup for all types of report format types based on FIUREID passed (Oracle SQL) using brgate table

-- Filters include:
-- 1) To include/exclude isolated reports
-- 2) To include/exclude deleted and replaced reports
-- 3) To include/exclude reports from invalid FIUREIDs

with batch_selected as

(
select batchid,entityname,fiureid,reporttype from fincorebackup1.batch WHERE reporttype in ('CTR','NTR','EFT')  and fiureid not in ( 'XXXXX00001', 'XXXXX99999','XXXXXXXXXX') 
and b.batchid not in (select originalbatchid from fincorebackup1.batch where batchtype in ('D','R') union select batchid from fincorebackup1.batch b2 where  batchtype ='D') 
and b. batchid not in (select distinct batchid from fincore_phase2.casecontrol where status in ('E','I','H')) and fiureid='FICSO00045' 
)

select z.fiureid, z.entityname ,
sum(case when z.reporttype='CTR' then No_of_Reports else 0 end) as CTR,
sum( case when z.reporttype = 'NTR' then No_of_Reports else 0 end) as NTR,
sum( case when z.reporttype = 'EFT' then No_of_Reports else 0 end) as EFT
From

(select upper(coalesce(rr.entityname,b.entityname)) as entityname, b.fiureid,b.reporttype,count(distinct r.batchid||r.rptsernum) as No_of_Reports
 from fincorebackup1.report r 
inner join batch_selected b on b.batchid=r.batchid 
left join  FINCORE_PHASE2.re rr on rr.fiureid=b.fiureid
where (not exists (select 1 from fincorebackup1.arftrn t where r.batchid=t.batchid and r.rptsernum=t.rptsernum)
and  not exists (select 1 from fincorebackup1.trftrn t where r.batchid=t.batchid and r.rptsernum=t.rptsernum))
group by upper(coalesce(rr.entityname,b.entityname)), b.fiureid,b.reporttype )z

group by z.fiureid, z.entityname

----------------------------------------------------------------
--Query 6: Dump of all reports which have GOS as null based on FIUREID passed (Oracle SQL) using batch table

-- Filters include:
-- 1) To include/exclude isolated reports
-- 2) To include/exclude deleted and replaced reports
-- 3) To include/exclude reports from invalid FIUREIDs

select coalesce(rr.recategory,b.recategory) as recategory,b.fiureid,coalesce(rr.entityname,b.entityname) as entityname,B.BATCHID,R.RPTSERNUM,  r.GROUNDSOFSUSP,b.reporttype  from fincorebackup1.BATCH b
inner join fincorebackup1.report r on r.batchid=b.batchid where b.reporttype='Null' and fiureid='FICSO00045' --enter FIUREID here

----------------------------------------------------------------------------
--Query 7: Check for reports with transaction amount greater than 100 crores, (Oracle SQL) tables used are arftrn and trftrn

-- Filters include:
-- 1) To include/exclude isolated reports
-- 2) To include/exclude deleted and replaced reports
-- 3) To include/exclude reports from invalid FIUREIDs
-- 4) Filter reports based on report types

select entityname,b.fiureid, b.reporttype,recategory, zz.amount ,count(distinct b.batchid||r.rptsernum) as Count_Below_Threshold from fincorebackup1.batch b
inner join fincorebackup1.report r on b.batchid = r.batchid and b.fiureid in ('FICSO00049') --enter FIUREID here
AND b.batchid not in (select originalbatchid from fincorebackup1.batch  WHERE batchtype in ('D','R') union select batchid from fincorebackup1.batch b2 where  batchtype ='D')
and b. batchid not in (select distinct batchid from fincore_phase2.casecontrol where status in ('E','I','H')) and reporttype ='STR'
inner join  
(select batchid, rptsernum, sum(AMOUNT) as Amount from fincorebackup1.arftrn 
group by batchid, rptsernum
union
select batchid, rptsernum,sum(AMOUNTRUPEES) as Amount from fincorebackup1.trftrn
group by batchid, rptsernum
)zz
on r.batchid=zz.batchid and r.rptsernum = zz.RPTSERNUM
and zz.amount> 1000000000

group by entityname,b.fiureid, b.reporttype,recategory, zz.amount

------------------------------------------------
--Query 8: Check for reports with missing mainperson names, (Oracle SQL) table used is batch

-- Filters include:
-- 1) To include/exclude isolated reports
-- 2) To include/exclude deleted and replaced reports
-- 3) To include/exclude reports from invalid FIUREIDs

select coalesce(rr.entityname,b.entityname) as entityname,coalesce(rr.recategory,b.recategory) as recategory,rc.recategorydesc,count( distinct b.batchid||r.rptsernum) as reports_with_mainperson_null  from fincorebackup1.batch b join
fincorebackup1.report r on b.batchid=r.batchid 
--and b.fiureid in ('FICSO00038') --enter FIUREID here
--AND b.batchid not in (select distinct originalbatchid from fincorebackup1.batch  union select distinct batchid from fincorebackup1.batch b2 where  batchtype ='D') 
--and (b.batchid,r.RPTSERNUM) not in (select distinct batchid,REPORTSERIALNUM from fincore_phase2.casecontrol where status in ('E','I','H'))
and mainpersonname is null
left join  FINCORE_PHASE2.re rr on rr.fiureid=b.fiureid
left join  FINCORE_PHASE2.recategory rc on rc.recategory=rr.recategory
group by coalesce(rr.entityname,b.entityname) ,coalesce(rr.recategory,b.recategory),rc.recategorydesc

-------------------------------------------------
--Query 9: Check for reports with missing PAN,email and mobile number (Oracle SQL) table used is brgate,arfinp and arflpe

-- Filters include:
-- 1) To include/exclude isolated reports
-- 2) To include/exclude deleted and replaced reports
-- 3) To include/exclude reports from invalid FIUREIDs

with str_batch1 as(select distinct b.batchid,r.rptsernum,b.fiureid,b.entityname from fincorebackup1.brgate b join
fincorebackup1.report r on b.batchid=r.batchid and b.fiureid in ('BAOTH00008') --enter FIUREID here
AND b.batchid not in (select distinct originalbatchid from fincorebackup1.batch  union select distinct batchid from fincorebackup1.batch b2 where  batchtype ='D') 
),

str_batch as
(
select distinct b.batchid,b.rptsernum,b.fiureid,b.entityname from str_batch1 b inner join (
select distinct batchid,rptsernum from str_batch1 minus 
select distinct batchid,REPORTSERIALNUM from  fincore_phase2.casecontrol where  status in ('E','I','H')) c on b.batchid=c.batchid and b.rptsernum=c.rptsernum
)

select distinct s.fiureid,i.batchid,i.rptsernum,pan,mobile,personname,email,accountnum, 'arfinp' as table_name from fincorebackup1.arfinp i inner join str_batch s on i.batchid=s.batchid and i.rptsernum=s.rptsernum 
union 
select distinct s.fiureid,i.batchid,i.rptsernum,pan,mobile,personname,email,accountnum ,'arflpe' as table_name from fincorebackup1.arflpe i inner join str_batch s on i.batchid=s.batchid and i.rptsernum=s.rptsernum 
union
select distinct s.fiureid,i.batchid, i.rptsernum, pan ,mobile ,  CUSTOMERNAME as personname , email, accountnum, 'trftrn' as table_name from fincorebackup1.trftrn i inner join str_batch s on i.batchid=s.batchid and i.rptsernum=s.rptsernum

----------------------------------------------------------
--Query 10: Check for reports which are currently placed under isolation table (Oracle SQL) table used is casecontrol based on FIUREID

-- Filters include:
-- 1) To include/exclude reports from invalid FIUREIDs
-- 2) To filter reports on basis of batch type

select r.fiureid,count(distinct cs.batchid||cs.reportserialnum) from fincore_phase2.casecontrol cs 
inner join fincorebackup1.brgate r
on cs.batchid=r.batchid
where r.fiureid in ('ZZZZZ00034') --enter FIUREID here
and cs.status in ('E','I','H')
--and batchtype='R'
group by r.fiureid

----------------------------------------------------------
--Query 11: Clustering all duplicate GOS for a given FIUREID to get reports that have duplicate GOS (POSTGRES SQL) based on FIUREID

SELECT b.cluster_no,a.*,b.dup_no
	FROM public.data_extracted a inner join  (
select row_number() over ( order by dup_no desc) cluster_no, * from (
SELECT groundsofsusp,count(1) dup_no
	FROM public.data_extracted group by 1 having count(1)>1) b)b on a.groundsofsusp=b.groundsofsusp order by  b.cluster_no

------------------------------------------------------------
--Query 12: check if batchid,repsernum for a given fiureid in case dissemination table

with exception as (select distinct batchid,REPORTSERIALNUM from fincore_phase2.casecontrol where status in ('E','I','H')),
finc as (select * from fincore_phase2.fincase 
where fiureidagencyid in ()
)
select rr.recategory,rr.entityname,a.*,case when casestatus='D' and caseaction='D' then 'DISSEMINATED' else 'NOT DISSEMINATED' end as dissemination_status from finc a left join exception b on a.batchid=b.batchid and a.reportrequestserialnum=b.REPORTSERIALNUM
left join  FINCORE_PHASE2.re rr on rr.fiureid=a.fiureidagencyid
left join  FINCORE_PHASE2.recategory rc on rc.recategory=rr.recategory
where b.batchid is null and b.REPORTSERIALNUM is null

------------------------------------------------------------------
Query 13: check and remove isolatedreports

with exception as (select distinct batchid,REPORTSERIALNUM from fincore_phase2.casecontrol where status in ('E','I','H')),
sbatch  as (select a.batchid,b.rptsernum ,REPORTTYPE,FIUREID from fincorebackup1.batch a inner join fincorebackup1.report b on a.batchid=b.batchid and fiureid in ()  and (b.batchid,b.rptsernum) not in (select batchid,REPORTSERIALNUM from exception))
select B.* from fincore_phase2.fincase a RIGHT join  sbatch b on a.batchid=b.batchid and b.rptsernum=a.reportrequestserialnum WHERE A.BATCHID IS NULL AND A.reportrequestserialnum IS NULL

------------------------------------------------------------------
--Check which reports have disseminated and non disseminated reports

with exception as (select distinct batchid,REPORTSERIALNUM from fincore_phase2.casecontrol where status in ('E','I','H')),
finc as (select * from fincore_phase2.fincase 
where fiureidagencyid in ('FIAPR01051')
)
select a.*,case when casestatus='D' and caseaction='D' then 'DISSEMINATED' else 'NOT DISSEMINATED' end as dissemination_status from finc a left join exception b on a.batchid=b.batchid and a.reportrequestserialnum=b.REPORTSERIALNUM
where b.batchid is null and b.REPORTSERIALNUM is null

-----------------------------------------
--Check GOS and DOI less than 500

select  recategory,b.fiureid, entityname,B.BATCHID,R.RPTSERNUM,r.GROUNDSOFSUSP, r.DETAILSOFINVESTIGATIONS from fincorebackup1.BATCH b 
inner join fincorebackup1.report r on b.batchid=r.batchid  where b.reporttype = 'STR' and (LENGTH(NVL(GROUNDSOFSUSP,0)) +LENGTH(NVL(DETAILSOFINVESTIGATIONS,0)))< 500 
and b.batchid between 2205010000 and 2205319999 
group by b.recategory, b.fiureid  ,b.entityname,B.BATCHID,R.RPTSERNUM,r.GROUNDSOFSUSP,r.DETAILSOFINVESTIGATIONS 
-------------------------------------------
--Connection to postgres from python

import pandas as pd
import numpy as np
import psycopg2
from sqlalchemy import create_engine

pengine=create_engine('postgresql+psycopg2://postgres:postgres@localhost:5432/postgres')
df = pd.read_csv(r'Z:\cleandata15sept2022.csv',encoding='latin1')
#df.columns = [x.lower() for x in df.columns]

df.to_sql(name='fundflow_cleandata15sept2022',con=pengine,if_exists='append',index=False,schema='rfi_study')
------------------------------------------
--Select aggregated person name from arfinp

select batchid,rptsernum,listagg(personname,',') within group (order by batchid) as names from (
select distinct batchid,rptsernum,personname from arfinp where (batchid,rptsernum) in (('2205318232','324010')))z
group by z.batchid,z.rptsernum
--------------------------------------------
Fuzzy Wuzzy

d={}
test=[]
for i in payment_ent_name_sheet: #to be check file
    matches_list=process.extractBests(i, re_name(#master file) ,scorer=fuzz.token_sort_ratio,score_cutoff=90)
    if matches_list!=[]:
        d[i]=matches_list
    for i in matches_list:
        if i in re_name:
            re_name.remove(i)

matched_items=list(d.items())
test=[]
for k in matched_items:
    test.append(k[0])
print(list(set(test)))

-----------------------------------------
To search for specific keywords in GOS

select * from(
select b.batchid,r.rptsernum,r.groundsofsusp,r.detailsofinvestigations,b.fiureid,r.mainpersonname,b.entityname from batch b
inner join report r on b.batchid=r.batchid
where b.batchid between 2004010000 and 2206069999
and ( upper(r.groundsofsusp) like ('%ONLINE%') and (upper(r.groundsofsusp) like (' %GAME% ') or upper(r.groundsofsusp) like ('%GAMING%'))
or upper(r.detailsofinvestigations) like ('%ONLINE%') and (upper(r.detailsofinvestigations) like (' %GAME% ') or upper(r.detailsofinvestigations) like ('%GAMING%') )))x
-------------------------------------------------

=TRIM(MID(SUBSTITUTE($A2,";",REPT(" ",LEN($A2))),(C$1-1)*LEN($A2)+1,LEN($A2)))

---------------------------------------------------

## To concatenate batchid rptsernum
="('"&A1&"',"&"'"&B1&"'),"
="'"&A1&"|"&""&B1&"',"

---------------------------------------------------
## Query batchid||rptsernum wise pan,concat pan, person name and occupation

with cte1 as
(
select distinct batchid,rptsernum, occupation as occupation_names, personname as person_names,pan from arfinp where (batchid,rptsernum) in ()
union
select distinct batchid,rptsernum, natureofbusiness as occupation_names, personname as person_names, pan from arflpe where (batchid,rptsernum) in ()
union
select distinct batchid,rptsernum,  occupation as occupation_names,customername as person_names, pan from trftrn where (batchid,rptsernum) in ()
)
select distinct batchid,rptsernum,wm_concat(distinct occupation_names) as occupation_names,count(distinct occupation_names) as occupation_names_count,wm_concat(distinct person_names) as person_names,count(distinct person_names) as person_names_count,wm_concat(distinct pan) as pan,count(distinct pan) as pan_count from cte1
--where pan is not null
group by batchid,rptsernum

------------------------------------------------------
## Query pan wise batchid||rtpsernum,concat pan, person name and occupation

with cte1 as
(
select distinct pan, occupation as occupation_names, personname as person_names, batchid||'-'||rptsernum as batch_concat from arfinp where (pan,1) in ()
and (batchid,rptsernum) in ()
union
select distinct pan, natureofbusiness as occupation_names, personname as person_names, batchid||'-'||rptsernum as batch_concat from arflpe where (pan,1) in ()
and (batchid,rptsernum) in ()
union
select distinct pan, occupation as occupation_names ,customername as person_names,batchid||'-'||rptsernum as batch_concat from trftrn where (pan,1) in ()
and (batchid,rptsernum) in ()
)
select pan,wm_concat(distinct batch_concat),count(distinct batch_concat) as batch_count,wm_concat(distinct occupation_names),count(distinct occupation_names) as occupation_count,wm_concat(distinct person_names),count(distinct person_names) as person_count from cte1
group by pan
order by batch_count desc

------------------------------------------------------
--For single batchid rptsernum wise grouping

with cte1 as
(
select distinct batchid,rptsernum, occupation as occupation_names, personname as person_names,pan from arfinp where (batchid,rptsernum) in (select '2205193683','322623' from dual)
union
select distinct batchid,rptsernum, natureofbusiness as occupation_names, personname as person_names, pan from arflpe where (batchid,rptsernum) in (select '2205193683','322623' from dual)
union
select distinct batchid,rptsernum,  occupation as occupation_names,customername as person_names, pan from trftrn where (batchid,rptsernum) = (select '2205193683','322623' from dual)
)
select distinct batchid,rptsernum,wm_concat(distinct occupation_names) as occupation_names,count(distinct occupation_names) as occupation_names_count,wm_concat(distinct person_names) as person_names,count(distinct person_names) as person_names_count,wm_concat(distinct pan) as pan,count(distinct pan) as pan_count from cte1
where pan is not null
group by batchid,rptsernum
--order by pan_count desc

------------------------------------------------------
--Present in batchid but not in report
select * from (
select  distinct fiureid,b.batchid as bb,r.batchid as rr from batch b 
left join report r on b.batchid=r.batchid 
where  fiureid in () --enter FIUREID here
and b.batchid between 2001010000 and 2206069999)
where rr is null
--------------------------------
---Dump of data
select b.batchid,b.fiureid,r.rptsernum,b.entityname from batch b 
join report r on b.batchid=r.batchid
--where b.batchid between 2001010000 and 2206069999
and b.fiureid='FIAPR01249' --enter FIUREID here
------------------------------
---Missing mainperson name

select b.batchid,r.rptsernum,count( distinct b.batchid||r.rptsernum) as reports_with_mainperson_null,b.fiureid,b.entityname from fincorebackup1.batch b join report r on b.batchid=r.batchid 
where b.fiureid in () --enter FIUREID here
--AND b.batchid not in (select distinct originalbatchid from fincorebackup1.batch  union select distinct batchid from fincorebackup1.batch b2 where  batchtype ='D') 
--and (b.batchid,r.RPTSERNUM) not in (select distinct batchid,REPORTSERIALNUM from fincore_phase2.casecontrol where status in ('E','I','H'))
and mainpersonname is null
--and b.batchid between 2001010000 and 2206069999
--left join  FINCORE_PHASE2.re rr on rr.fiureid=b.fiureid
--left join  FINCORE_PHASE2.recategory rc on rc.recategory=rr.recategory
group by b.batchid,r.rptsernum,b.fiureid,b.entityname
-----------------------------------
---GOS+DOI less than 500 chracters
select  B.BATCHID,R.RPTSERNUM,b.fiureid, entityname,b.reporttype,r.GROUNDSOFSUSP, r.DETAILSOFINVESTIGATIONS from fincorebackup1.BATCH b 
inner join fincorebackup1.report r on b.batchid=r.batchid  --where (LENGTH(NVL(GROUNDSOFSUSP,0)) +LENGTH(NVL(DETAILSOFINVESTIGATIONS,0)))< 500 
--and b.batchid between 2001010000 and 2206069999 --and b.reporttype = 'STR' 
and b.fiureid in ('FIAPR01249')
group by b.recategory, b.fiureid  ,b.entityname,B.BATCHID,R.RPTSERNUM,r.GROUNDSOFSUSP,r.DETAILSOFINVESTIGATIONS,b.reporttype
--------------------------------
--Delay in filing (after 15th of next month in CTR)
with cte2 as(select distinct b.batchid,reportserialnum from fincore_phase2.casecontrol c join batch b 
on c.batchid=b.batchid and status in ('E','I','H') 
and b.batchid between 2001010000 and 2206069999
--left outer join FINCORE_PHASE2.re fre on fre.fiureid=b.fiureid
and b.reporttype='CTR'
union
select distinct b.batchid,reportserialnum from fincore_phase2.casecontrolerror c join fincorebackup1.batch b 
on c.batchid=b.batchid  AND  b.batchid between 2001010000 and 2206069999
and b.reporttype='CTR'),
cte1 as
(select distinct b.fiureid as refiureid,b.batchid,b.reporttype,r.rptsernum
from batch b 
join report r on r.batchid=b.batchid 
--and b.batchid between 2001010000 and 2206069999
and b.fiureid in ()
and b.reporttype='CTR'
and b.batchid not in 
(select batchid from batch 
where batchtype='D' 
union
select originalbatchid from batch ) and 
(b.batchid,r.rptsernum) not in (select batchid,reportserialnum from cte2))
,cte as(select c.batchid, a.rptsernum, a.dateoftransaction as dateoftransaction,c.refiureid
from fincorebackup1.arftrn a join cte1 c on a.batchid=c.batchid and a.rptsernum=c.rptsernum
and c.batchid between 2001010000 and 2206069999
union
select c.batchid, t.rptsernum,TRANSACTIONDATE as dateoftransaction,c.refiureid from fincorebackup1.trftrn t 
join cte1 c on t.batchid=c.batchid and t.rptsernum=c.rptsernum
and c.batchid between 2001010000 and 2206069999),
cte3 as(
select * from cte
where to_date(substr(batchid,1,6),'YY-mm-DD')  >  add_months(trunc(to_date(dateoftransaction,'yyyy-mm-dd'),'mm'),1)+15-1 )
select refiureid,COUNT(DISTINCT batchid||rptsernum) REPORTCASECOUNT  from  cte3
group BY refiureid
-------------------------------
---Amount threshold less than 100 crore
with str_batch as(select distinct b.batchid,r.rptsernum,b.fiureid,b.entityname,b.reporttype from batch b join
report r on b.batchid=r.batchid and b.fiureid in () --enter FIUREID here
--where  b.batchid between 2001010000 and 2206069999)

select a.batchid, a.rptsernum,c.fiureid,c.entityname, sum(a.AMOUNT) as Amount,c.reporttype from arftrn a join str_batch c on a.batchid=c.batchid and a.rptsernum=c.rptsernum
--and c.batchid between 2001010000 and 2206069999 
--where c.reporttype = 'CTR'
group by a.batchid, a.rptsernum,c.fiureid,c.entityname,reporttype
union
select a.batchid, a.rptsernum,c.fiureid,c.entityname,sum(a.AMOUNTRUPEES) as Amount,c.reporttype from trftrn a join str_batch c on a.batchid=c.batchid and a.rptsernum=c.rptsernum
--and c.batchid between 2001010000 and 2206069999 
--where c.reporttype = 'CTR'
group by a.batchid, a.rptsernum,c.fiureid,c.entityname,reporttype
-------------------------------
---FFMC non cash mode transactions
with batches as (select distinct b.fiureid,b.entityname,b.batchid,r.rptsernum,b.reporttype,b.reportformattype from batch b 
join report r on b.batchid=r.batchid
where b.fiureid in ()
--and b.reporttype='CTR'
)

select distinct bt.batchid,bt.rptsernum,bt.fiureid,bt.entityname,ar.transactionmode as transaction_type,bt.reporttype,bt.reportformattype from arftrn ar inner join batches bt on ar.batchid=bt.batchid
union
select distinct bt.batchid,bt.rptsernum,bt.fiureid,bt.entityname,tf.instrumenttype as transaction_type,bt.reporttype,bt.reportformattype from trftrn tf inner join batches bt on tf.batchid=bt.batchid
---------------------------------
---Present in report but absent in arftrn and trftrn

select distinct r.batchid,r.rptsernum,b.fiureid,b.reporttype from batch b join report r
on b.batchid=r.batchid 
--where b.batchid between 2001010000 and 2206069999
and b.fiureid in ()
minus
(
select distinct a.batchid,a.rptsernum,b.fiureid,b.reporttype from arftrn a
join batch b on b.batchid=a.batchid
--where b.batchid between 2001010000 and 2206069999
and b.fiureid in ()
union
select distinct a.batchid,a.rptsernum,b.fiureid,b.reporttype from trftrn a
join batch b on b.batchid=a.batchid
--where b.batchid between 2001010000 and 2206069999
and b.fiureid in ()
)

----------------------------------

-- Batch extract from Oracle

with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype from batch
b left outer join re_master r on b.fiureid = r.fiureid
where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA'))
select * from cte

-- batch and report info
with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype from batch
b left outer join re_master r on b.fiureid = r.fiureid
where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA'))
select cte.batchid, fiureid, reportformattype, reporttype, entityname, recategory, poname, originalbatchid, batchtype, rptsernum, groundsofsusp, detailsofinvestigations, mainpersonname, sourceofalert from cte
left join report r
on cte.batchid = r.batchid

--Adding transactions details

with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype 
from batch b left outer join re_master r on b.fiureid = r.fiureid
where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA')),

cte2 as (select cte.batchid, fiureid, reportformattype, reporttype, entityname, recategory, poname, originalbatchid, batchtype, rptsernum, groundsofsusp, detailsofinvestigations, mainpersonname, sourceofalert from cte
left join report r
on cte.batchid = r.batchid)

select cte2.*, accountnum, transactionmode, debitcredit, currency, amount, transactiontype from cte2
left join arftrn arf
on cte2.batchid = arf.batchid
and cte2.rptsernum = arf.rptsernum

-------------------------------------------------------

--TRFTRN

with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype 
from batch b left outer join re_master r on b.fiureid = r.fiureid
where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA')),

cte2 as (select cte.batchid, fiureid, reportformattype, reporttype, entityname, recategory, poname, originalbatchid, batchtype, rptsernum, groundsofsusp, detailsofinvestigations, mainpersonname, sourceofalert from cte
left join report r
on cte.batchid = r.batchid)

select c.batchid, c.rptsernum, transactiondate, transactiontype, instrumenttype, amountrupees, accountnum, pan from cte2 c
left join trftrn trf
on c.batchid = trf.batchid
and c.rptsernum = trf.rptsernum

---------------------------------------------------------

--arfinp, arflpe

with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype 
from batch b left outer join re_master r on b.fiureid = r.fiureid
--where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA')),

cte2 as (select cte.batchid, fiureid, reportformattype, reporttype, entityname, recategory, poname, originalbatchid, batchtype, rptsernum, groundsofsusp, detailsofinvestigations, mainpersonname, sourceofalert from cte
left join report r
on cte.batchid = r.batchid)

select c.batchid, c.rptsernum, accountnum, pan from cte2 c
left join arfinp i
on c.batchid = i.batchid
and c.rptsernum = i.rptsernum
union
(
select c.batchid, c.rptsernum, accountnum, pan from cte2 c
left join arflpe l
on c.batchid = l.batchid
and c.rptsernum = l.rptsernum
)

----------------------------------------------------------
-- case control error

with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype 
from batch b left outer join re_master r on b.fiureid = r.fiureid
--where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA')),

cte2 as (select  cte.batchid, rptsernum from cte
left join report r
on cte.batchid = r.batchid)

select c.batchid, c.rptsernum, casecreationpriority,status from cte2 c
left join fincore_phase2.casecontrolerror cce
on c.batchid = cce.batchid
and c.rptsernum = cce.reportserialnum

-- case control
with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype 
from batch b left outer join re_master r on b.fiureid = r.fiureid
where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA')),

cte2 as (select  cte.batchid, rptsernum from cte
left join report r
on cte.batchid = r.batchid)

select c.batchid, c.rptsernum, casecreationpriority,status from cte2 c
left join fincore_phase2.casecontrol cce
on c.batchid = cce.batchid
and c.rptsernum = cce.reportserialnum

--------------------------------------------------------------------

--arf branch

with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype 
from batch b left outer join re_master r on b.fiureid = r.fiureid
where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA')),

cte2 as (select  cte.batchid, rptsernum from cte
left join report r
on cte.batchid = r.batchid)

select c.batchid, c.rptsernum, accountnum, branchname, branchrefnum, statecode, pincode, countrycode from cte2 c
left join arfbrc a
on c.batchid = a.batchid
and c.rptsernum = a.rptsernum

--trf branch

with cte as( select b.batchid, b.fiureid, b.reportformattype,b.reporttype, coalesce(r.recategory,b.recategory) as recategory, coalesce(r.entityname,b.entityname) as entityname, 
poname, b.originalbatchid, b.batchtype 
from batch b left outer join re_master r on b.fiureid = r.fiureid
where b.batchid between 1604010000 and 2206069999 
and coalesce(r.recategory,b.recategory)  in ('FINBN', 'FINBA')),

cte2 as (select  cte.batchid, rptsernum from cte
left join report r
on cte.batchid = r.batchid)

select c.batchid, c.rptsernum, instname, instbranchname, instrefnum, statecode, pincode, countrycode  from cte2 c
left join trfbrc a
on c.batchid = a.batchid
and c.rptsernum = a.rptsernum

-----------------------------------------------------------

## Cluster Group of PANs that occur together in multiple batchid

with cte1 as
(
select distinct batchid,rptsernum, occupation as occupation_names, personname as person_names,pan from arfinp where (batchid,rptsernum) in ()
union
select distinct batchid,rptsernum, natureofbusiness as occupation_names, personname as person_names, pan from arflpe where (batchid,rptsernum) in ()
union
select distinct batchid,rptsernum,  occupation as occupation_names,customername as person_names, pan from trftrn where (batchid,rptsernum) in ()
)
,cet2 as(
select distinct batchid,rptsernum,wm_concat(distinct pan) as pan,count(distinct pan) as pan_count,wm_concat(distinct occupation_names) as occupation_names,count(distinct occupation_names) as occupation_names_count,
wm_concat(distinct person_names) as person_names,count(distinct person_names) as person_names_count from cte1
--where pan is not null
group by batchid,rptsernum),

cte3 as (
select pan from (
select row_number() over( partition by pan order by pan_count desc) rn,c.* from cet2 c)
where rn>1 and  pan is not null and length (pan)>11
order by pan, rn desc
)

select * from (
select row_number() over( partition by pan order by pan_count desc) rn,c.* from cet2 c)
where pan in (select pan from cte3) 
order by pan, rn
-----------------------------------------------------------

pip install numpy -i http://pypi.douban.com/simple --trusted-host pypi.douban.com

------------------------------------------
-------------Pincode Count----------------------
with cte1 as
(
SELECT distinct batchid::text||'||'||rptsernum::text as brn, upper(trim(commpincode)) as pincodes 
    FROM risk_priority.arfinp2004_2212 where (batchid,rptsernum) in ()
union
SELECT distinct batchid::text||'||'||rptsernum::text	as brn, upper(trim(commpincode)) as pincodes 
    FROM risk_priority.arflpe2004_2212 where (batchid,rptsernum) in ()
union
SELECT distinct batchid::text||'||'||rptsernum::text as brn, upper(trim(pincode)) as pincodes	
    FROM risk_priority.trftrn_final_str where (batchid,rptsernum) in ()
)

select distinct trim(brn), count(distinct upper(trim(pincodes))) cnt, string_agg(upper(trim(pincodes)), '||')
from cte1
group by brn
order by cnt desc
---------------------------------------------


-- batches without report details:

SELECT batchid, fiureid, entityname, reporttype, recategory
	FROM nbfc_data.report
    WHERE rptsernum is null
    AND reporttype != 'CCR'
    AND batchid in (select distinct (batchid) from nbfc_data.isolatedexcluded )

---------------------------------------

-- Invalid or dummy PAN

with cte as 
(select *  from 

(select batchid, rptsernum, pan from nbfc_data.arfinplpe
WHERE accountnum is not null
UNION

select batchid, rptsernum, pan from nbfc_data.trftrn
 WHERE transactiondate is not null
) a

where (pan in('AAAAA0000A','AAAAA1111A','AAAAA1234A','XXXXX0000X','XXXXX1111X','XXXXX1234X','ABCDE1234F','XXXXX9999X','AAAAA9999A') or pan is null) or
pan !~ '^[A-Z]{5}[0-9]{4}[A-Z]$' 
AND batchid in (select distinct (batchid) from nbfc_data.isolatedexcluded )
 )

select fiureid, recategory,entityname, count(distinct a.batchid|| rptsernum::varchar) from nbfc_data.isolatedexcluded a
where (a.batchid,a.rptsernum) in (select cte.batchid, cte.rptsernum from cte) 
group by fiureid, recategory,entityname


---------------------------------------

-- transaction details missing

with cte as 
((select b.batchid, arf.rptsernum, b.fiureid, b.entityname, b.reporttype, b.recategory from nbfc_data.arftrn_new arf
inner join nbfc_data.isolatedexcluded b
on arf.batchid = b.batchid
and arf.rptsernum is not null
and arf.accountnum is not null
)
UNION
(select b.batchid, trf.rptsernum, b.fiureid, b.entityname, b.reporttype, b.recategory from nbfc_data.trftrn trf
inner join nbfc_data.isolatedexcluded b
on trf.batchid = b.batchid
and trf.rptsernum is not null
and trf.transactiondate is not null
))

select fiureid, recategory,entityname, count(distinct a.batchid|| rptsernum::varchar) from nbfc_data.isolatedexcluded a
where (a.batchid,a.rptsernum) not in (select cte.batchid, cte.rptsernum from cte) 
group by fiureid, recategory,entityname

-----------------------------------------

-- timeliness of CTR, NTR, EFT

with cte as 
((select b.batchid, arf.rptsernum, b.fiureid, b.entityname, b.reporttype, b.recategory, dateoftransaction as transactiondate from nbfc_data.arftrn_new arf
inner join nbfc_data.isolatedexcluded b
on arf.batchid = b.batchid
and arf.rptsernum is not null
and arf.accountnum is not null
and reporttype IN ('CTR', 'NTR', 'EFT')
and to_date(substr(arf.batchid::text,1,6),'yymmdd')  >  date_trunc('month', (to_date(dateoftransaction,'yyyy-mm-dd') + INTERVAL '1 month')) + INTERVAL '14 days' 
)
UNION
(select b.batchid, trf.rptsernum, b.fiureid, b.entityname, b.reporttype, b.recategory, transactiondate from nbfc_data.trftrn trf
inner join nbfc_data.isolatedexcluded b
on trf.batchid = b.batchid
and trf.rptsernum is not null
and trf.transactiondate is not null
and reporttype IN ('CTR', 'NTR', 'EFT')
and to_date(substr(trf.batchid::text,1,6),'yymmdd')  >  date_trunc('month', (to_date(transactiondate,'yyyy-mm-dd') + INTERVAL '1 month')) + INTERVAL '14 days' 
))

select fiureid, recategory,entityname, count(distinct batchid::varchar|| rptsernum::varchar) as reportcount
from cte
group by fiureid, recategory,entityname

------------------------------------------

-- multiple branches

select b.fiureid, b.entityname, count(z.dupbranchcount) 
from nbfc_data.isolatedexcluded b 
join (
select batchid,rptsernum,accountnum,count(distinct branchrefnum) as dupbranchcount
from nbfc_data.arfbrc 
where rptsernum is not null
AND branchrefnum is not null
group by batchid,rptsernum,accountnum
having count(distinct branchrefnum) > 1) z 
on z.batchid = b.batchid
where reporttype != 'CCR'
group by b.fiureid, b.entityname
order by count(z.dupbranchcount) desc

---------------------------------------------



----------------RE WISE---------------
with cte1 as
(
      (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_final b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_1804_2003 b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
)
, cte2 as (
select distinct cte1.batchid, rptsernum, fiureid, entityname, recategory from  risk_priority.report_5_years r inner join cte1 on r.batchid=cte1.batchid
)

select fiureid,recategory, entityname,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2212319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid not in
(
select originalbatchid from risk_priority.batch_res_1804_2003 
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212)
group by fiureid,recategory, entityname
order by countt desc


----------RE CATEGORY WISE---------------------------------------------

with cte1 as
(
      (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_final b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_1804_2003 b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
)
, cte2 as (
select distinct cte1.batchid, rptsernum, fiureid, entityname, recategory from  risk_priority.report_5_years r inner join cte1 on r.batchid=cte1.batchid
)

select recategory,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2212319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid not in
(
select originalbatchid from risk_priority.batch_res_1804_2003 
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212)
group by recategory
order by countt desc




--------- Account type wise-------------------------------------
with cte1 as (select fy, batchid, rptsernum, accountnum, accounttype, accountholdertype, batchid::text||rptsernum::text  as brpt from  risk_priority.fatf_str_1804_2003
  union select fy, batchid, rptsernum,accountnum, accounttype, accountholdertype,batchid::text||rptsernum::text  as brpt from  risk_priority.fatf_str_2004_2212_ason_apr6),
cte as (select * from cte1 where (batchid, rptsernum) not in (select distinct batchid,reportserialnum as rptsernum from risk_priority.isolated_str_1804_2212) )  

select cte.accounttype, accounttypedesc,fy, count(distinct brpt)countt from cte
left join public.acc_type_master_name  r on cte.accounttype=r.accounttype
group by cte.accounttype, accounttypedesc,fy
order by fy,countt desc 


--------- Account holder type wise-------------------------------------

with cte1 as (select fy, batchid, rptsernum, accountnum, accounttype, accountholdertype, batchid::text||rptsernum::text  as brpt from  risk_priority.fatf_str_1804_2003
  union select fy, batchid, rptsernum,accountnum, accounttype, accountholdertype,batchid::text||rptsernum::text  as brpt from  risk_priority.fatf_str_2004_2212_ason_apr6),
cte as (select * from cte1 where (batchid, rptsernum) not in (select distinct batchid,reportserialnum as rptsernum from risk_priority.isolated_str_1804_2212) )  

select cte.accountholdertype, accountholdertypedesc,fy, count(distinct brpt)countt from cte
left join public.acc_holdertype_master_name r on cte.accountholdertype=r.accountholdertype
group by cte.accountholdertype, accountholdertypedesc,fy
order by fy,countt desc 


------------------------Occupation------------------------------------------------

with cte as (
select distinct batchid, rptsernum,accountnum, occupation from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum,accountnum, occupation from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum,accountnum, natureofbusiness from risk_priority.arflpe_1804_2003
union
select distinct batchid, rptsernum,accountnum, natureofbusiness from risk_priority.arflpe2004_2212)

select occupation, fy, count(distinct cte.batchid::text||cte.rptsernum::text) countt from  cte
inner join risk_priority.fatf_relevant_batchid_rptsernum a on a.batchid=cte.batchid and a.rptsernum=cte.rptsernum
group by occupation,fy


--------- Occupation-------------------------------------

with cte as (
select distinct batchid, rptsernum,accountnum, occupation from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum,accountnum, occupation from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum,accountnum, natureofbusiness from risk_priority.arflpe_1804_2003
union
select distinct batchid, rptsernum,accountnum, natureofbusiness from risk_priority.arflpe2004_2212)

select trim(upper(occupation))as occupation, fy, count(distinct cte.batchid::text||cte.rptsernum::text) countt from  cte
inner join risk_priority.fatf_relevant_batchid_rptsernum a on a.batchid=cte.batchid and a.rptsernum=cte.rptsernum
group by trim(upper(occupation)),fy


--------- Gender-------------------------------------

with cte as (
select distinct batchid, rptsernum,accountnum, gender from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum,accountnum, gender from  risk_priority.arfinp2004_2212
)
select gender, fy, count(distinct cte.batchid::text||cte.rptsernum::text) countt from  cte
inner join risk_priority.fatf_relevant_batchid_rptsernum a on a.batchid=cte.batchid and a.rptsernum=cte.rptsernum
group by gender,fy

-----------------------constitutiotype--------------------------------
with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
--select distinct batchid, rptsernum,accountnum,gender from  risk_priority.arfinp_1804_2003
--union
--select distinct batchid, rptsernum,accountnum, gender from  risk_priority.arfinp2004_2212
--union
select distinct batchid, rptsernum,accountnum, constitutiontype from risk_priority.arflpe_1804_2003
union
select distinct batchid, rptsernum,accountnum, constitutiontype from risk_priority.arflpe2004_2212)

select constitutiontype, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by constitutiontype
order by countt desc
------------------------nationality--------------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,accountnum,nationality from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum,accountnum, nationality from  risk_priority.arfinp2004_2212
--union
--select distinct batchid, rptsernum,accountnum, constitutiontype from risk_priority.arflpe_1804_2003
--union
--select distinct batchid, rptsernum,accountnum, constitutiontype from risk_priority.arflpe2004_2212
)

select nationality, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by nationality
order by countt desc

------------------------commcountrycode---------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,accountnum,commcountrycode from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum,accountnum, commcountrycode from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum,accountnum, commcountrycode from risk_priority.arflpe_1804_2003
union
select distinct batchid, rptsernum,accountnum, commcountrycode from risk_priority.arflpe2004_2212
)

select commcountrycode, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by commcountrycode
order by countt desc
-------------------------seccountrycode---------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,accountnum,seccountrycode from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum,accountnum, seccountrycode from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum,accountnum, seccountrycode from risk_priority.arflpe_1804_2003
union
select distinct batchid, rptsernum,accountnum, seccountrycode from risk_priority.arflpe2004_2212
)

select seccountrycode, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by seccountrycode
order by countt desc


------------------------------------------Occupation-----------------------------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,accountnum,occupation from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum,accountnum, occupation from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum,accountnum, natureofbusiness as occupation from risk_priority.arflpe_1804_2003
union
select distinct batchid, rptsernum,accountnum, natureofbusiness as occupation  from risk_priority.arflpe2004_2212
)

select trim(upper(occupation)) as occupation, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by trim(upper(occupation))
order by countt desc

-----------------------------------------------test queries--------------------------------------------------


with cte as (
select b.batchid, rptsernum
from  risk_priority.arfinp_1804_2003 i
join risk_priority.batch_res_1804_2003 b
on i.batchid = b.batchid
and b.batchid between 1804010000 and 1903319999
AND b.reportformattype = 'ARF'::text
and b.reporttype = 'STR'
and i.commcountrycode = 'XX'
    and b.batchtype<>'D'
           
UNION

select b.batchid, rptsernum 
from  risk_priority.arflpe_1804_2003 i
join risk_priority.batch_res_1804_2003 b
on i.batchid = b.batchid
and b.batchid between 1804010000 and 1903319999
AND b.reportformattype = 'ARF'::text
    and b.reporttype = 'STR'
and i.commcountrycode = 'XX'
and b.batchtype<>'D'
)

select count(distinct batchid::text||rptsernum::text)
from cte
where batchid not in
	(select originalbatchid from risk_priority.batch_res_1804_2003 
     union
    select originalbatchid from risk_priority.batch_res_final
    )
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
        isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)

---------------------------------------------------------------------------------------------------------

with cte as (                
select r.batchid,rptsernum,fiureid,recategory,mainpersonname, sourceofalert, r.groundsofsusp,r.detailsofinvestigations,
array_to_string(regexp_matches
				(regexp_replace(concat(' ',upper(trim(groundsofsusp)),' ',upper(trim(detailsofinvestigations)),' '),'[^\w]+',' ','g'),' CYBER CRIME | CYBER FRAUD | CYBERFRAUD | ONLINE FRAUD | ONLINE SCAM ','ig'),'') keyword
from risk_priority.report_1804_2003 r
inner join risk_priority.batch_1804_2003 b
on r.batchid=b.batchid
where  batchtype<>'D'
    AND b.reportformattype = 'ARF'::text
    and b.reporttype = 'STR'
                UNION
select r.batchid,rptsernum,fiureid,recategory,mainpersonname, sourceofalert,r.groundsofsusp,r.detailsofinvestigations,
array_to_string(regexp_matches
				(regexp_replace(concat(' ',upper(trim(groundsofsusp)),' ',upper(trim(detailsofinvestigations)),' '),'[^\w]+',' ','g'),' CYBER CRIME | CYBER FRAUD | CYBERFRAUD | ONLINE FRAUD | ONLINE SCAM ','ig'),'') keyword
from risk_priority.report_res_final r
inner join risk_priority.batch_res_final b
on r.batchid=b.batchid
where  batchtype<>'D'  
    AND b.reportformattype = 'ARF'::text
    and b.reporttype = 'STR')

select count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2212319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt 
from cte
where batchid not in (select originalbatchid from risk_priority.batch_1804_2003 
						union
						select originalbatchid from risk_priority.batch_res_final   ) 
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
        isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)

--------------------------------------------------------------------------------------------------------

--------------------------Accounthodertype-F count-----------------------------

with cte1 as
(
      (SELECT b.batchid, b.entityname, b.fiureid
           FROM risk_priority.batch_res_final b
          WHERE b.reporttype = 'STR'::text AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.entityname, b.fiureid
           FROM risk_priority.batch_res_1804_2003 b
          WHERE b.reporttype = 'STR'::text AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D') 
    
)
, cte2 as (
select distinct cte1.batchid, r.rptsernum, entityname, fiureid, r.groundsofsusp, r.detailsofinvestigations, r.mainpersonname, a.accountnum::text, a.accountholdertype from cte1
    inner join risk_priority.report_5_years r 
on r.batchid = cte1.batchid
inner join (select batchid, rptsernum, accountnum::text, accountholdertype from risk_priority.arfacc_str 
           union 
           select batchid, rptsernum, accountnum::text, accountholdertype from risk_priority.arfacc_1804_2003) a
on r.batchid = a.batchid and r.rptsernum = a.rptsernum
where a.accountholdertype = 'F')

select count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2212319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt 
    from cte2
where batchid not in
(
select originalbatchid from risk_priority.batch_res_1804_2003 
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212)
    
---------------------------------------Accounthodertype-F-----------------------------------------------

with cte1 as
(
      (SELECT b.batchid, b.entityname, b.fiureid
           FROM risk_priority.batch_res_final b
          WHERE b.reporttype = 'STR'::text AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.entityname, b.fiureid
           FROM risk_priority.batch_res_1804_2003 b
          WHERE b.reporttype = 'STR'::text AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D') 
    
)
, cte2 as (
select distinct cte1.batchid, r.rptsernum, entityname, fiureid, r.groundsofsusp, r.detailsofinvestigations, r.mainpersonname, a.accountnum::text, a.accountholdertype from cte1
    inner join risk_priority.report_5_years r 
on r.batchid = cte1.batchid
inner join (select batchid, rptsernum, accountnum::text, accountholdertype from risk_priority.arfacc_str 
           union 
           select batchid, rptsernum, accountnum::text, accountholdertype from risk_priority.arfacc_1804_2003) a
on r.batchid = a.batchid and r.rptsernum = a.rptsernum
where a.accountholdertype = 'F')

select  distinct batchid, rptsernum, entityname as re_name, fiureid, groundsofsusp, detailsofinvestigations, mainpersonname
    from cte2
where batchid not in
(
select originalbatchid from risk_priority.batch_res_1804_2003 
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212)



------------------------------------------------------------------------------------------------------------------
---------------------------------------------------With TRF-------------------------------------------------------


--------------------------RE Wise---------------------
with cte1 as
(
      (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_final b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text --AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_1804_2003 b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text --AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
)
, cte2 as (
select distinct cte1.batchid, rptsernum, fiureid, entityname, recategory from  risk_priority.report_5_years r inner join cte1 on r.batchid=cte1.batchid
)

select fiureid,recategory, entityname,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2212319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid not in
(
select originalbatchid from risk_priority.batch_res_1804_2003 
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212)
group by fiureid,recategory, entityname
order by countt desc



---------------------------RE Category Wise---------------------

with cte1 as
(
      (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_final b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text --AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_1804_2003 b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text --AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
)
, cte2 as (
select distinct cte1.batchid, rptsernum, fiureid, entityname, recategory from  risk_priority.report_5_years r inner join cte1 on r.batchid=cte1.batchid
)

select recategory,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2212319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid not in
(
select originalbatchid from risk_priority.batch_res_1804_2003 
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212)
group by recategory
order by countt desc


---------------------------------------Occupation-----------------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text --AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text --AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,occupation from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum, occupation from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum, natureofbusiness as occupation from risk_priority.arflpe_1804_2003
union
select distinct batchid, rptsernum, natureofbusiness as occupation  from risk_priority.arflpe2004_2212
union
select distinct batchid, rptsernum, occupation from risk_priority.trftrn_final_str
union 
select distinct batchid, rptsernum, occupation from risk_priority.trftrn_1804_2003
)

select trim(upper(occupation)) as occupation, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by trim(upper(occupation))
order by countt desc

--------------------------------------------Gender-----------------------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text --AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text --AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,gender from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum, gender from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum, gender from risk_priority.trftrn_final_str
union 
select distinct batchid, rptsernum, gender from risk_priority.trftrn_1804_2003
)

select trim(upper(gender)) as gender, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by trim(upper(gender))
order by countt desc

-----------------------------------------------Nationality--------------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text --AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text --AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,nationality from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum, nationality from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum, nationality from risk_priority.trftrn_final_str
union 
select distinct batchid, rptsernum, nationality from risk_priority.trftrn_1804_2003
)

select nationality, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by nationality
order by countt desc

---------------------------------------------------- Primary Country Wise-----------------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text --AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text --AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,commcountrycode from  risk_priority.arfinp_1804_2003
union
select distinct batchid, rptsernum, commcountrycode from  risk_priority.arfinp2004_2212
union
select distinct batchid, rptsernum, commcountrycode from risk_priority.arflpe_1804_2003
union
select distinct batchid, rptsernum, commcountrycode from risk_priority.arflpe2004_2212
union
select distinct batchid, rptsernum, countrycode as commcountrycode from risk_priority.trftrn_final_str
union 
select distinct batchid, rptsernum, countrycode as commcountrycode from risk_priority.trftrn_1804_2003
)

select commcountrycode, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by commcountrycode
order by countt desc

------------------------------------ARFBRC wise 5 year STR count------------------------

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text --AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text --AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,statecode from  arfbrc_full_dump.arfbrc_0420_1222
union
select distinct batchid, rptsernum, statecode from  risk_priority.arfbrc_1804_2003
)
,cte3 as (
select upper(trim(statecode)) as statecodes, count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
group by statecodes
order by countt desc
    )
 select distinct gg.state,cte3.* from cte3 left join public.geography_master gg on cte3.statecodes=gg.statecode
 order by cte3.countt desc
------------------------------------------------------
To get arfbrc data removing isolated and join with geography master table

--select min(batchid),max(batchid) from arfbrc_full_dump.arfbrc_0420_1222
--select min(batchid),max(batchid) from risk_priority.arfbrc_1804_2003

with cte1 as
(
      SELECT *
           FROM risk_priority.batch_res_final
          WHERE batch_res_final.reporttype = 'STR'::text --AND batch_res_final.reportformattype = 'ARF'::text
        UNION
         SELECT *
           FROM risk_priority.batch_res_1804_2003
          WHERE batch_res_1804_2003.reporttype = 'STR'::text --AND batch_res_1804_2003.reportformattype = 'ARF'::text
)
, cte2 as (
select distinct batchid, rptsernum,statecode from  arfbrc_full_dump.arfbrc_0420_1222
union
select distinct batchid, rptsernum, statecode from  risk_priority.arfbrc_1804_2003
)
,cte3 as (
select upper(trim(statecode)) as statecodes,batchid,rptsernum,batchid::text||'|'||rptsernum::text as brn
--  count(distinct batchid::text||rptsernum::text) filter (where batchid between 1804010000 and 1903319999) FY_1819,
--	count(distinct batchid::text||rptsernum::text) filter (where batchid between 1904010000 and 2003319999) FY_1920,
--	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2004010000 and 2103319999) FY_2021,
--	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2104010000 and 2203319999) FY_2122,
--	count(distinct batchid::text||rptsernum::text) filter (where batchid between 2204010000 and 2303319999) FY_2223,
--	count(distinct batchid::text||rptsernum::text) as countt
	from  cte2
where batchid in
(
	select distinct batchid from cte1 where batchid not in
	(select originalbatchid from cte1 union select batchid from cte1 where batchtype='D' )
         )
		  and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
            isolated_str_1804_2212.reportserialnum AS rptsernum
           FROM risk_priority.isolated_str_1804_2212)
--group by statecodes,batchid,rptsernum,brn
--order by countt desc
    )
 select distinct gg.state,gg.pincode,gg.district,gg.statecode,cte3.* from cte3 left join public.geography_master gg on cte3.statecodes=gg.statecode
-- order by cte3.countt desc
--select  from public.geography_master limit 10
-------------------------------------------------------

//172.16.22.16 qlik

-------------------------------------
Macro level STR analysis followup

with cte1 as
(
      (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_final b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text --AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_1804_2003 b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text --AND b.reportformattype = 'ARF'::text
	and b.batchtype<>'D')
)
, cte2 as (
select distinct cte1.batchid, rptsernum, fiureid, entityname, recategory,groundsofsusp,detailsofinvestigations,mainpersonname from  risk_priority.report_5_years r inner join cte1 on r.batchid=cte1.batchid
 where fiureid in ('BAOTH00011')) --'BAOTH00011','INOTH00048','BAOTH00017','BAUCB00152','BAUCB01883'))

, cte3 as (
select entityname,batchid, rptsernum, fiureid, recategory,groundsofsusp,detailsofinvestigations,mainpersonname,(coalesce(groundsofsusp,'null'::text)||coalesce(detailsofinvestigations::text,'null'::text)) gos_doi
from  cte2
where batchid not in
(
select originalbatchid from risk_priority.batch_res_1804_2003 
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212))
    
--select * from cte3 limit 3

select a.* from cte3 a where (LENGTH(gos_doi))<500

--2107277130	5
--(LENGTH(NVL(GROUNDSOFSUSP,0)) +LENGTH(NVL(DETAILSOFINVESTIGATIONS,0)))< 500 

    
    
--SELECT b.cluster_no,b.dup_no,a.*
--	FROM cte3 a inner join  (
--select row_number() over ( order by dup_no desc) cluster_no, * from (
--SELECT gos_doi,count(1) dup_no
--FROM cte3 group by 1 having count(1)>1) b)b on a.gos_doi=b.gos_doi order by  b.cluster_no
    
--select coalesce(groundsofsusp,0::text),coalesce(DETAILSOFINVESTIGATIONS,0::text) from risk_priority.report_5_years limit 5

------------------------------------------------------------------------------

with cte1 as(SELECT batchid, rptsernum, brn, groundsofsusp, detailsofinvestigations, crime_keyword, main_bucket, yr, financial_year
FROM gos_cluster.adverse_keyword_dump),
with cte2 as(select * from (
select distinct batchid, rptsernum,statecode from  arfbrc_full_dump.arfbrc_0420_1222
union
select distinct batchid, rptsernum, statecode from  risk_priority.arfbrc_1804_2003
)z
where (batchid,rptsernum) in(select distinct batchid,rptsernum from gos_cluster.adverse_keyword_dump))
,cte3 as (
select upper(trim(statecode)) as statecodes,batchid,rptsernum,batchid::text||'|'||rptsernum::text as brn
from  cte2
)
select distinct gg.state,gg.pincode,gg.district,gg.statecode,cte3.* from cte3 left join public.geography_master gg on cte3.statecodes=gg.statecode

-----------------------------------------------------------------------

   
select b.*,crime_keyword, main_bucket from gos_cluster.branch_details b
inner join gos_cluster.inplpe_keyword_match i on i.batchid=b.batchid and i.rptsernum=b.rptsernum and i.accountnum =b.accountnum 



select a.*,g.district from gos_cluster.adverse_keyword_dump_heatmap_qlik a
inner join public.geography_master g on a.pincode_new=g.pincode and g.statecode=a.statecode
-----------------------------------------------

Creating index postgres

CREATE INDEX idx_branch_details_batchid_rptser_acc_new
    ON gos_cluster.branch_details_new1 USING btree
    (batchid, rptsernum, accountnum COLLATE pg_catalog."default")
    TABLESPACE pg_default;
CREATE INDEX idx_branch_details_statecode_new
    ON gos_cluster.branch_details_new1 USING btree
    (statecode COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-------------------------------------------------------

with cte1 as
(
SELECT  (branchrefnum::text||fiureid::text) as brn,fiureid,main_bucket,address,
count(distinct batchid::text||rptsernum::text) strs_cnt
	FROM gos_cluster.str_analysis_for_fatf
    group by (branchrefnum::text||fiureid::text),fiureid,main_bucket,address
)
 
select c1.*,entityname,row_number() over(partition by brn order by strs_cnt desc) counts from cte1 c1 inner join
 public.re_master re on c1.fiureid=re.fiureid
 order by strs_cnt desc
--------------------------------------
select *,row_number() over(partition by main_bucket order by countt desc)  from(
select (trim(branchrefnum)||'|'||fiureid)as brid, main_bucket, count(main_bucket)countt,address,entityname from gos_cluster.str_analysis_for_fatf
group by (trim(branchrefnum)||'|'||fiureid),main_bucket,address,entityname
)z
where brid='0512014|BASCB00071'
order by brid desc

---------------------------------------------
same brn in multiple branches

select batchid::text||'-'||rptsernum::text brn, count(distinct 'brid'||'-'||branchrefnum||'|'||fiureid)countt,string_agg(distinct 'brid'||'-'||branchrefnum||'|'||fiureid,',') branches
  FROM gos_cluster.str_analysis_for_fatf
  group by brn
  having(count(distinct 'brid'||'-'||branchrefnum||'|'||fiureid))>1
  order by countt desc
----------------------------------
adverse keyword breakup yoy
with cte1 as(select batchid,rpt,disseminationdate from gos_cluster.case_dissemination_final_2305 where batchid>'1804010000'),
cte2 as (select ad.*,cte1.disseminationdate from gos_cluster.adverse_keyword_dump ad join cte1 on ad.batchid=cte1.batchid and ad.rptsernum=cte1.rpt)

select main_bucket,
count(distinct brn) filter(where disseminationdate between '2018-04-01' and '2019-03-31') as FY_2018_19,
count(distinct brn) filter(where disseminationdate between '2019-04-01' and '2020-03-31') as FY_2019_20,
count(distinct brn) filter(where disseminationdate between '2020-04-01' and '2021-03-31') as FY_2020_21,
count(distinct brn) filter(where disseminationdate between '2021-04-01' and '2022-03-31') as FY_2021_22,
count(distinct brn) filter(where disseminationdate between '2022-04-01' and '2023-03-31') as FY_2022_23,
count(distinct brn) summ from cte2
group by main_bucket
order by summ desc
--------------------------------
rANKING IN eXCEL
=SUMPRODUCT(($A$2:$A$19009=A2) * (E2<$E$2:$E$19009)) +1
----------------------------------

-------for PI and PPI

with cte1 as
(
      (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_final b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text and b.fiureid in ('FICSO00046', 'FIAPR00126', 'FICSO00041', 'ZZZZZ00052', 'FIOTH00007', 'BAOTH00008', 'FICSO00031', 'INOTH00253', 'FIMTA00020', 'FICSO00035', 'ZZZZZ00022', 'FICSO00061', 'ZZZZZ00034', 'FICSO00065', 'INOTH00257', 'FICSO00038', 'FIAPR01125', 'FICSO00036', 'FICSO00057', 'FICSO00054', 'FICSO00062', 'FICSO00033', 'ZZZZZ00021', 'FINBF13138', 'FIOTH00382', 'FICSO00059', 'ZZZZZ00016', 'FICSO00058', 'FICSO00005', 'FICSO00049')
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM str_prioritization2.batch_22_23 b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text and b.fiureid in ('FICSO00046', 'FIAPR00126', 'FICSO00041', 'ZZZZZ00052', 'FIOTH00007', 'BAOTH00008', 'FICSO00031', 'INOTH00253', 'FIMTA00020', 'FICSO00035', 'ZZZZZ00022', 'FICSO00061', 'ZZZZZ00034', 'FICSO00065', 'INOTH00257', 'FICSO00038', 'FIAPR01125', 'FICSO00036', 'FICSO00057', 'FICSO00054', 'FICSO00062', 'FICSO00033', 'ZZZZZ00021', 'FINBF13138', 'FIOTH00382', 'FICSO00059', 'ZZZZZ00016', 'FICSO00058', 'FICSO00005', 'FICSO00049')
	and b.batchtype<>'D')
)
, cte2 as (
select distinct cte1.batchid, rptsernum, fiureid, entityname, recategory,mainpersonname,groundsofsusp,detailsofinvestigations,sourceofalert from  risk_priority.report_res_final_april20_march23 r inner join cte1 on r.batchid=cte1.batchid
)

select * from  cte2
where batchid not in
(
select originalbatchid from str_prioritization2.batch_22_23
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212)
--group by recategory
--order by countt desc
-----------------------------------------------
full dump pan mobile in pi and ppi
with cte1 as
(
      (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM risk_priority.batch_res_final b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text and b.fiureid in ('FICSO00046', 'FIAPR00126', 'FICSO00041', 'ZZZZZ00052', 'FIOTH00007', 'BAOTH00008', 'FICSO00031', 'INOTH00253', 'FIMTA00020', 'FICSO00035', 'ZZZZZ00022', 'FICSO00061', 'ZZZZZ00034', 'FICSO00065', 'INOTH00257', 'FICSO00038', 'FIAPR01125', 'FICSO00036', 'FICSO00057', 'FICSO00054', 'FICSO00062', 'FICSO00033', 'ZZZZZ00021', 'FINBF13138', 'FIOTH00382', 'FICSO00059', 'ZZZZZ00016', 'FICSO00058', 'FICSO00005', 'FICSO00049')
	and b.batchtype<>'D')
        UNION
          (SELECT batchid, b.fiureid, coalesce(r.entityname,b.entityname) as entityname, coalesce(r.recategory, b.recategory) as recategory
           FROM str_prioritization2.batch_22_23 b
	left join public.re_master r on r.fiureid = b.fiureid
          WHERE b.reporttype = 'STR'::text and b.fiureid in ('FICSO00046', 'FIAPR00126', 'FICSO00041', 'ZZZZZ00052', 'FIOTH00007', 'BAOTH00008', 'FICSO00031', 'INOTH00253', 'FIMTA00020', 'FICSO00035', 'ZZZZZ00022', 'FICSO00061', 'ZZZZZ00034', 'FICSO00065', 'INOTH00257', 'FICSO00038', 'FIAPR01125', 'FICSO00036', 'FICSO00057', 'FICSO00054', 'FICSO00062', 'FICSO00033', 'ZZZZZ00021', 'FINBF13138', 'FIOTH00382', 'FICSO00059', 'ZZZZZ00016', 'FICSO00058', 'FICSO00005', 'FICSO00049')
	and b.batchtype<>'D')
)
, cte2 as (
select distinct cte1.batchid,r.rptsernum,r.pan,r.mobile,r.personname from str_prioritization2.inp_res r inner join cte1 on r.batchid=cte1.batchid
union
select distinct cte1.batchid,r.rptsernum,r.pan,r.mobile,r.personname from str_prioritization2.lpe_res r inner join cte1 on r.batchid=cte1.batchid
union
select distinct cte1.batchid,r.rptsernum,r.pan,r.mobile,r.customername as personname from risk_priority.trftrn_final_str r inner join cte1 on r.batchid=cte1.batchid
)

select * from  cte2
where batchid not in
(
select originalbatchid from str_prioritization2.batch_22_23
union
select originalbatchid from risk_priority.batch_res_final
)
and (batchid,rptsernum) not in ( SELECT DISTINCT isolated_str_1804_2212.batchid,
isolated_str_1804_2212.reportserialnum AS rptsernum
FROM risk_priority.isolated_str_1804_2212)
--group by recategory
--order by countt desc

--------------------------------------------------------------------------------------
FINNET 2.0 STR extract

with cte0 as
(select [Fiu_Re_Id],[Re_Name], b.[id_],[fiuBatchId],[reportTypeId],[reportTypeName], [reId],b.batchId
FROM [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload] (nolock) b
inner join [FINCORE_DB].[Fincore].[Account_Master] (nolock) am on am.[Re_Id]=b.[reId]
inner join [FINCORE_BRIDGE].[fingate_Report](nolock) r on r.[batchid]=b.[id_] and r.status=35 and  b.[reportTypeName]='STR'
), 
cte1 as
(
select  id_,[reportId],relationFlag,batchId,reportType,transactionType,floor(amount) amount,senderName sender_name,senderAcNo sender_acc,beneficiaryName reciever_name,beneficiaryAcNo reciever_acc,'NEFT/RTGS' as category ,'tsone' as source
from [FINCORE_BRIDGE].[fingate_TsOne] (nolock) where reportType='STR'
union
select [reportId],id_,relationFlag,batchId,reportType,transactionType,floor(amount) amount,senderName sender_name,senderAcNo sender_acc, [benefName] reciever_name,beneficiaryAcNo reciever_acc,'IMPS' as category ,'tstwo' as source 
from [FINCORE_BRIDGE].[fingate_TsTwo] (nolock) where reportType='STR'
union
select [reportId],id_,relationFlag,batchId,reportType,transactionType,floor( [transactionAmount]) amount,senderName sender_name,senderAcNo sender_acc,  [beneficiaryName] reciever_name,beneficiaryAcNo reciever_acc,'UPI' as category  ,'tsthree' as source
from [FINCORE_BRIDGE].[fingate_TsThree] (nolock) where reportType='STR'
union
select [reportId],id_,relationFlag,batchId,reportType,transactionType,floor( [transactionAmount]) amount, [issuingBankName] sender_name,'NA' as sender_acc,[customerName] reciever_name,'NA' as reciever_acc,'INSURENCE' as category ,'tsfour' as source 
from [FINCORE_BRIDGE].[fingate_TsFour] (nolock) where reportType='STR'
union
select [reportId],id_,'NA' as relationFlag,batchId,reportType,transactionType,floor( amount) amount, 'NA' sender_name,'NA' as sender_acc,[customerName] reciever_name,accountNo as reciever_acc,'MUTUAL FUND' as category  ,'tsfive' as source
from [FINCORE_BRIDGE].[fingate_TsFive] (nolock) where reportType='STR'
union
select [reportId],id_,'NA' as relationFlag,batchId,reportType,'NA' as transactionType,floor( amount) amount, 'NA' sender_name,'NA' as sender_acc,'NA' as reciever_name,'NA' as reciever_acc,'MUTUAL FUND' as category  ,'tssix' as source
from [FINCORE_BRIDGE].[fingate_TsSix] (nolock) where reportType='STR'
),
cte2 as(select cte0.[Fiu_Re_Id],[Re_Name],[fiuBatchId],cte1.* from cte0 inner join cte1 on cte0.id_=cte1.batchId)
,
cte3 as(select cte2.[reportId],cte2.relationFlag,cte2.batchId,cte2.reportType,cte2.transactionType,cte2.amount,cte2.sender_name,cte2.sender_acc,cte2.reciever_name,cte2.reciever_acc,cte2.source,gs1.[gosTextNarration] gosdoi,gs1.[gosTag2] source_of_alert from cte2
inner join [FINCORE_BRIDGE].[fingate_Gos] (nolock) gs1 on cte2.[reportId]=gs1.[reportId]
),
cte4 as (
select firstName as Name,pan,[telephoneNumber],[mobileNumber],email,reportId,primaryAddressLine1 address,primaryPinCode pincode,'INDIVIDUAL' as INPLPE,ucic from [FINCORE_BRIDGE].[fingate_PersonDetail]
union
select Name,pan,[telephoneNumber],[mobileNumber],[emailId],reportId,addressLine1 address,pinCode,'ENTITY' as INPLPE,ucic from [FINCORE_BRIDGE].[fingate_EntityDetail]
),
cte5 as (
select cte3.*,cte4.Name,cte4.pan,cte4.telephoneNumber,cte4.mobileNumber,cte4.email,cte4.address,cte4.pincode,INPLPE,ucic from cte3 inner join cte4 on cte3.reportId=cte4.reportId
),
cte6 as (select cte5.*,concat('A-',acc.accountNo) accountNumber,acc.personType,acc.nonCustomerName from cte5 inner join FINCORE_BRIDGE.fingate_AccountPerson acc on acc.ucic=cte5.ucic and acc.reportid=cte5.reportid)
select top 50 * from cte6


-----------------------------------------------------------------------------------

## o	where source of alert is CV/LQ/MR or suspicion due to terror financing is YES.

SELECT DISTINCT batchid,rptsernum, originalrptsernum, mainpersonname, sourceofalert, suspduetoproceedsofcrime, suspduetocomplextrans, suspduetonoecorationale, suspoffinancingofterrorism, attemptedtransaction, groundsofsusp, detailsofinvestigations, leainformed, leadetails, priorityrating, reportcoverage, additionaldocuments
	FROM str_prioritization2.report_22_23 
    WHERE (batchid,rptsernum) NOT IN (SELECT DISTINCT batchid, rptsernum FROM str_prioritization2.duplicate_str_tagged_removed WHERE rr=1)
    AND sourceofalert IN ('CV','LQ','MR') OR suspoffinancingofterrorism = 'Y'
	
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## o	where nationality reported is other than IN, XX, ZZ in INP file.

SELECT DISTINCT batchid, rptsernum, accountnum, personname, customerid, relationflag, commaddress, commcity, commstatecode, commpincode, commcountrycode, secaddress, seccity, secstatecode, secpincode, seccountrycode, telephone, mobile, fax, email, pan, uin, gender, dob, identificationtype, identificationnumber, issuingauthority, placeofissue, nationality, placeofwork, fatherorspouse, occupation, deletedflag, branchrefnum
	FROM str_prioritization2.arfinp_22_23 
    WHERE (batchid,rptsernum) NOT IN (SELECT DISTINCT batchid, rptsernum FROM str_prioritization2.duplicate_str_tagged_removed WHERE rr=1 AND LENGTH(CONCAT(groundsofsusp,'',detailsofinvestigations))>500)
    AND nationality NOT IN ('IN','XX','ZZ')
	
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## o	where country of incorporation is reported other than IN, XX, ZZ.

SELECT DISTINCT batchid, rptsernum, accountnum, personname, customerid, relationflag, commaddress, commcity, commstatecode, commpincode, commcountrycode, secaddress, seccity, secstatecode, secpincode, seccountrycode, telephone, mobile, fax, email, pan, uin, constitutiontype, registrationnumber, dateofincorporation, placeofregistration, countrycode, natureofbusiness, deletedflag, branchrefnum
	FROM str_prioritization2.arflpe_22_23 
    WHERE (batchid,rptsernum) NOT IN (SELECT DISTINCT batchid, rptsernum FROM str_prioritization2.duplicate_str_tagged_removed WHERE rr=1 AND LENGTH(CONCAT(groundsofsusp,'',detailsofinvestigations))>500)
    AND countrycode NOT IN ('IN','XX','ZZ')
	
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## o	if identification type reported as NREGA Job Holder in INP file.

SELECT DISTINCT batchid, rptsernum, accountnum, personname, customerid, relationflag, commaddress, commcity, commstatecode, commpincode, commcountrycode, secaddress, seccity, secstatecode, secpincode, seccountrycode, telephone, mobile, fax, email, pan, uin, gender, dob, identificationtype, identificationnumber, issuingauthority, placeofissue, nationality, placeofwork, fatherorspouse, occupation, deletedflag, branchrefnum
	FROM str_prioritization2.arfinp_22_23
    WHERE (batchid,rptsernum) NOT IN (SELECT DISTINCT batchid, rptsernum FROM str_prioritization2.duplicate_str_tagged_removed WHERE rr=1 AND LENGTH(CONCAT(groundsofsusp,'',detailsofinvestigations))>500)
    AND identificationtype = 'H'

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## o	if constitution type reported in LPE file is among trust, society or association

SELECT DISTINCT * FROM str_prioritization2.arflpe_22_23
    WHERE (batchid,rptsernum) NOT IN (SELECT DISTINCT batchid, rptsernum FROM str_prioritization2.duplicate_str_tagged_removed WHERE rr=1 AND LENGTH(CONCAT(groundsofsusp,'',detailsofinvestigations))>500)
    AND constitutiontype IN ('F','G', 'H')

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## o	PANs with relationship flag ‘A’, which have been reported in greater than or equal to 5 STRs.

WITH CTE1 AS (SELECT batchid, rptsernum, accountnum, relationflag, deletedflag, email, mobile, mobile_clean, pan, pan_clean, personname, uin
FROM str_prioritization2.inp_res
UNION
SELECT batchid, rptsernum, accountnum, relationflag, deletedflag, email, mobile, mobile_clean, pan, pan_clean, personname, uin
FROM str_prioritization2.lpe_res)
SELECT batchid,rptsernum,pan_clean,relationflag FROM CTE1 GROUP BY (batchid,rptsernum,pan_clean,relationflag) HAVING relationflag = 'A' AND COUNT(batchid::text||'|'||rptsernum::text) >= 5

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


WITH CTE1 AS (SELECT batchid, rptsernum, accountnum, relationflag, deletedflag, email, mobile, mobile_clean, pan, pan_clean, personname, uin
FROM str_prioritization2.inp_res WHERE relationflag = 'A'
UNION
SELECT batchid, rptsernum, accountnum, relationflag, deletedflag, email, mobile, mobile_clean, pan, pan_clean, personname, uin
FROM str_prioritization2.lpe_res WHERE relationflag = 'A'),
----------------------------union of inp_lpe_FY22-23------------------------------------------

CTE2 AS (SELECT * FROM ctr_5yrs.all_india_panwise_accountwise WHERE batchid BETWEEN '2204010000' AND '2212319999'
UNION
SELECT * FROM karnataka_election.all_india_panwise_accountwise_jan_to_mar23),
----------union of ctrs-----------------------FY22-23----------------------------------------

CTE3 AS (SELECT * FROM CTE1 WHERE (batchid,rptsernum) NOT IN (SELECT DISTINCT batchid, rptsernum 
        FROM str_prioritization2.duplicate_str_tagged_removed WHERE rr!=1 AND LENGTH(CONCAT(groundsofsusp,'',detailsofinvestigations))>500)),
--------removing all the brpt from above which are found to be duplicated---------------------

CTE4 AS (SELECT * FROM CTE3 WHERE (batchid,rptsernum) IN (SELECT DISTINCT batchid, rptsernum FROM str_prioritization2.amount_greater_than_50l))
--------getting only those brpt which have total of greater than 50 Lakhs----------------------
CTE5 AS (SELECT distinct a.*,b.* FROM CTE4 a INNER JOIN CTE2 b ON a.pan_clean = b.pan),
SELECT a.*,r.mainpersonname CTE5 a INNER JOIN  str_prioritization2.report_res_final r ON a.batchid = r.batchid AND a.rptsernum = r.rptsernum

---------------------------------------------------------------------------------------------------

Create blank table

open PuTTY
host name (ip address)-172.16.22.15
Post-22
Click Open
User Name appadmin1
FinNet@2021


[appadmin1@oltpdbsal02 ~]$ pwd
/home/appadmin1
[appadmin1@oltpdbsal02 ~]$ cd /
[appadmin1@oltpdbsal02 /]$ ls
bin  boot  data1  dev  etc  home  lib  lib64  media  mnt  opt  Postgres  proc  Quarantine  root  run  sbin  srv  sys  tmp  usr  var
[appadmin1@oltpdbsal02 /]$ sudo psql -U postgres
[sudo] password for appadmin1:
Password for user postgres:
psql (14.4)
Type "help" for help.

postgres=# \copy karnataka_election.trans_march23 from '/data1/pgsql_data/ARFTRN_CTR_MARCH23.csv' delimiter ',' csv header
COPY 1324086
postgres=#

For Backup
sudo pg_dump -U postgres -F c -n risk_priority > /Postgres/risk_priority.backup

-----------------------------------------------------------------------------------------------------------

def query_run(query,engine_,path_to_file, file_name,mode = 'a'):
    '''
    **query**: ('str') Enter the query 
    **engine_** : ('str') the function creates a connection with postgres server 172.16.22.15:5432/postgres as default,
              other engines can be specified here as well
    **mode**: ('str') mode is append by default, can be changed to simply write as well
    **path_to_file**: ('str') path where the file to be saved
    **filename**: ('str') name of the file, defaults get saved as csv
    '''
    if mode == 'a':
        try:
            print('--Engine Running--')
            engine_ = engine_
            conn = engine_.connect()
            results = pd.read_sql(query,conn)
            conn.close()
            engine_.dispose()
            print('--Engine Closing--')
            print('Results_appending')
            file_name = f'{file_name}.csv'
            path = os.path.join(path_to_file,file_name)
            results.to_csv(path, index = False, mode = mode, header= not os.path.exists(path))
        except OperationalError as oe:
            time.sleep(3000)
            print('Reconnecting with Server')
            print('--Engine Running--')
            engine_ = engine_
            conn = engine_.connect()
            results = pd.read_sql(query,conn)
            conn.close()
            engine_.dispose()
            print('--Engine Closing--')
            print('Results_appending')
            filename = f'{file_name}.csv'
            path = os.path.join(path_to_file,file_name)
            results.to_csv(path, index = False, mode = mode, header= not os.path.exists(path))
    else:
        print('--Engine Running--')
        engine_ = engine_
        conn = engine_.connect()
        results = pd.read_sql(query,engine_)
        conn.close()
        engine_.dispose()
        print('--Engine Closing--')
        print('Results_appending')
        file_name = f'{file_name}.csv'
        path = os.path.join(path_to_file,file_name)
        results.to_csv(path, index = False, mode = mode)

----------------------------------------------------
Run application in background

jupyter nbconvert --execute --to notebook Fundflow_Hosted_File.ipynb
-------------------------------------------------------
Create index on multiple columns

CREATE INDEX idx_brn_trn
ON [FINCORE_BACKUP_CC].trftrn (batchid,rptsernum,[TRANSACTIONREFNUM]);

--------------------------------------------------------
Replace quotes from rows

UPDATE [Finnet_1.0].[dbo].[RJ_MZ_apr23_election]
SET [rptsernum]= REPLACE([rptsernum], '"', '')

----------------------------------------------------------

case when DEBITCREDIT ='C' then 'Credit' when DEBITCREDIT ='D' then 'Debit'
else 'Not Categorized' end as DEBITCREDIT

--------------------------------------------------------

clean dump

with cte1 as (select distinct recategory,b.fiureid,B.BATCHID,ENTITYNAME,
REPORTTYPE, SUBSTRING(cast(b.batchid as varchar), 1, 4) as year_month
from [FINCORE_BACKUP_CC].[BATCH] (nolock) b where b.fiureid in ('BASCB00076','BARRB00265')
and b.BATCHID between 1804010000 and 2305319999
and REPORTTYPE='CTR'
and REPORTFORMATTYPE='ARF'
and b.batchid not in ((select distinct originalbatchid from [FINCORE_BACKUP_CC].[BATCH]  
union 
select distinct batchid from [FINCORE_BACKUP_CC].[BATCH] b2 where  batchtype ='D'))),

cte2 as(select distinct cte1.fiureid,cte1.batchid,atr.rptsernum,cte1.ENTITYNAME,cte1.year_month, 
concat('A-',ACCOUNTNUM)accountNo,amount,count(amount) as monthly_transaction_counts,
sum(amount) total_amount_monthly,
case when DEBITCREDIT ='C' then 'Credit' when DEBITCREDIT ='D' then 'Debit'
else 'Not Categorized' end as DEBITCREDIT from [FINCORE_BACKUP_CC].[ARFTRN] atr (nolock)
inner join cte1 on cte1.batchid=atr.batchid
and amount<>0
group by cte1.fiureid,cte1.batchid,atr.rptsernum,cte1.year_month, concat('A-',ACCOUNTNUM),amount,DEBITCREDIT,cte1.ENTITYNAME),

cte3 as (select distinct pan,personname,MOBILE,'arfinp' as source,OCCUPATION,cte2.* from [FINCORE_BACKUP_CC].[ARFINP] inp (nolock) 
inner join cte2 on cte2.batchid=inp.BATCHID and cte2.rptsernum=inp.rptsernum and cte2.accountNo=concat('A-',inp.ACCOUNTNUM)
where  RELATIONFLAG='A' and pan not in ('XXXXX0000X','AAAAA0000A','AAAAA1111A','AAAAA1234A','XXXXX0000X','XXXXX1111X','XXXXX1234X','ABCDE1234F','XXXXX9999X','AAAAA9999A')
union
select distinct pan,personname,MOBILE,'arflpe' as source,NATUREOFBUSINESS as OCCUPATION,cte2.* from [FINCORE_BACKUP_CC].[ARFLPE] lpe (nolock)
inner join cte2 on cte2.batchid=lpe.BATCHID and cte2.rptsernum=lpe.rptsernum and cte2.accountNo=concat('A-',lpe.ACCOUNTNUM)
where  RELATIONFLAG='A' and pan not in ('XXXXX0000X','AAAAA0000A','AAAAA1111A','AAAAA1234A','XXXXX0000X','XXXXX1111X','XXXXX1234X','ABCDE1234F','XXXXX9999X','AAAAA9999A')
)
select *,case when SUBSTRING(pan,4,1) ='P' then 'Individual' when SUBSTRING(pan,4,1) ='H' then 'HUF'
when SUBSTRING(pan,4,1) ='F' then 'Firm' when SUBSTRING(pan,4,1) ='C' then 'Company' when SUBSTRING(pan,4,1) ='A' then 'Association of Person'
when SUBSTRING(pan,4,1) ='B' then 'Body of Individual'
else 'Not Categorized' end as pan_type from cte3

-------------------------------------------------------------------------

select concat('ID-',[fiuBatchId]) fiubatchid,[reportRefNo],r.batchid, r.id_ as reportid, b.id_,b.reportTypeName,
reportId,[gosTextNarration] gos,[gosTag2] source_of_alert,r.status,r.id_ from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r
left join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b on  b.id_ = r.batchId
left join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Gos] (nolock) gs on r.id_=gs.reportId
where concat_ws('|',fiuBatchId,[reportRefNo]) in ()

-----------------------------------------------------------------------------

SELECT top 5 * INTO [Fincore_Bridge_DB].dbo.newtable FROM [Finnet_1.0].[FINCORE_BACKUP_CC].[ARFACC] WHERE ACCOUNTHOLDERTYPE='A';

select cte2.*,cte1.REPORTFORMATTYPE,cte1.REPORTTYPE,cte1.ENTITYNAME,fiureid into [finnet_1.0].dbo.eft_jnkbank_dump from cte2 inner join cte1 on cte1.batchid=cte2.batchid

--------------------------------------------------------------------------

with cte1 as (
	select b.batchId,fiuBatchID,r.id_, b.reportTypeName,
	--SUBSTRING(fiuBatchID,1,8) as batchid_
	--SUBSTRING(fiuBatchID,1,4) as yr ,
	--SUBSTRING(fiuBatchID,5,2) as mon, 
	SUBSTRING(fiuBatchID,3,4) as yr_mon
	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	--join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] z (nolock) on b.reId = z.id_
	where r.migrated_flag is null and  r.status=35
	and b.reportTypeName in ('CTR','STR','CCR','NTR','CBWTR')
	and SUBSTRING(fiuBatchID,3,4) in( '2305')
 )
 select yr_mon,reportTypeName, count(id_) 
 from cte1
 group by yr_mon,reportTypeName
_____________________________________________________________________________________

select reporttypeid ,count(1) from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r
where r.migrated_flag is null and  r.status=35  and  substring( [fiuBatchId],1,8) between 20230501  and 20230531 
group by reporttypeid
_____________________________________________________________________________________
Batch_count---

with cte1 as (
	select COUNT(distinct b.batchId)batch_count , b.reportTypeName,
 
	SUBSTRING(fiuBatchID,3,4) as yr_mon
	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	--join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.reId = re.id_
	where r.migrated_flag is null and  r.status=35 and re.active_=1
	and b.reportTypeName in ('CTR','STR','CCR','NTR','CBWTR')
	and substring( [fiuBatchId],1,8) between 20230501  and 20230531 
	group by b.reportTypeName, SUBSTRING(fiuBatchID,3,4)
 ),

 cte2 as (select yr_mon,reportTypeName, 

case when reportTypeName='STR' then batch_count  else 0 end as STR,                     
case when reportTypeName='CTR' then batch_count  else 0 end as CTR,                     
case when reportTypeName='NTR' then batch_count  else 0 end as NTR,                     
case when reportTypeName='CBWTR' then batch_count  else 0 end as EFT,                    
case when reportTypeName='CCR' then batch_count  else 0 end as CCR,  
case when reportTypeName='BDU' then batch_count  else 0 end as BDU,
case when reportTypeName is null then batch_count  else 0 end as NULLREPORT,
batch_count as total_batch_count
from cte1)
select yr_mon, sum(STR) STR,sum(CTR) CTR,sum(NTR) NTR,sum(EFT) EFT,sum(CCR) CCR,sum(BDU) BDU ,sum(NULLREPORT) NULL_REPORT, sum(total_batch_count)total_batch_count 
from cte2 c2 group by yr_mon 



select distinct([reportTypeName]) FROM [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock)



_________________________________________________________________________________

3A- Total report counts across all RE's
Report_Count--

with cte1 as (
	select count(distinct r.id_) report_count, b.reportTypeName,
 
	SUBSTRING(fiuBatchID,3,4) as yr_mon
	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.reId = re.id_
	where r.migrated_flag is null and  r.status=35 and re.active_=1
	and b.reportTypeName in ('CTR','STR','CCR','NTR','CBWTR','BDU')
	and substring( [fiuBatchId],1,8) between 20230501  and 20230531 
	group by b.reportTypeName,SUBSTRING(fiuBatchID,3,4) 
 ),

 cte2 as (select yr_mon,reportTypeName, 

case when reportTypeName='STR' then report_count  else 0 end as STR,                     
case when reportTypeName='CTR' then report_count  else 0 end as CTR,                     
case when reportTypeName='NTR' then report_count  else 0 end as NTR,                     
case when reportTypeName='CBWTR' then report_count  else 0 end as EFT,                    
case when reportTypeName='CCR' then report_count  else 0 end as CCR,  
case when reportTypeName='BDU' then report_count  else 0 end as BDU,
case when reportTypeName is null then report_count  else 0 end as NULLREPORT,
report_count as total_report_count
from cte1)
select yr_mon, sum(STR) STR,sum(CTR) CTR,sum(NTR) NTR,sum(EFT) EFT,sum(CCR) CCR,sum(BDU) BDU ,sum(NULLREPORT) NULL_REPORT, sum(total_report_count)total_report_count 
from cte2 c2 group by yr_mon 

_____________________________________________________________________________
3B- RE wise Report count
with cte1 as (
	select coalesce([oldREId],[newREId]) as FIUREID,trim(upper([name])) as RE_NAME,count(distinct r.id_) report_count, b.reportTypeName
 

	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.reId = re.id_
	where r.migrated_flag is null and  r.status=35 and re.active_=1
	and b.reportTypeName in ('CTR','STR','CCR','NTR','CBWTR','BDU')
	and substring( [fiuBatchId],1,8) between 20230501  and 20230531 
	group by coalesce([oldREId],[newREId]) ,trim(upper([name])),b.reportTypeName
 ),

 cte2 as (select FIUREID,RE_NAME,reportTypeName, 

case when reportTypeName='STR' then report_count  else 0 end as STR,                     
case when reportTypeName='CTR' then report_count  else 0 end as CTR,                     
case when reportTypeName='NTR' then report_count  else 0 end as NTR,                     
case when reportTypeName='CBWTR' then report_count  else 0 end as EFT,                    
case when reportTypeName='CCR' then report_count  else 0 end as CCR,  
case when reportTypeName='BDU' then report_count  else 0 end as BDU,
case when reportTypeName is null then report_count  else 0 end as NULLREPORT,
report_count as total_report_count
from cte1)
select FIUREID,RE_NAME, sum(STR) STR,sum(CTR) CTR,sum(NTR) NTR,sum(EFT) EFT,sum(CCR) CCR,sum(BDU) BDU ,sum(NULLREPORT) NULL_REPORT, sum(total_report_count)total_report_count 
from cte2 c2 group by FIUREID,RE_NAME order by total_report_count  desc
______________________________________________________________________________
4- Category Wise reporting
with cte1 as ( select count(distinct r.id_) report_count, b.reportTypeName, trim(upper([description])) Cat_Description, lob.[name] Cat_Name
	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.reId = re.id_
	left join [DATAHUB_DB].[FIUMetaHub].[finnet_LineOfBusiness] LOB ON LOB.id_ =re.[lineOfBusinessId] and re.active_=1 
	where r.migrated_flag is null and  r.status=35
	and b.reportTypeName in ('CTR','STR','CCR','NTR','CBWTR','BDU')
	and substring( [fiuBatchId],1,8) between 20230501  and 20230531 
	group by trim(upper([description])),lob.[name], b.reportTypeName),

cte2 as (select Cat_Name,Cat_Description,reportTypeName, 

case when reportTypeName='STR' then report_count  else 0 end as STR,                     
case when reportTypeName='CTR' then report_count  else 0 end as CTR,                     
case when reportTypeName='NTR' then report_count  else 0 end as NTR,                     
case when reportTypeName='CBWTR' then report_count  else 0 end as EFT,                    
case when reportTypeName='CCR' then report_count  else 0 end as CCR,  
case when reportTypeName='BDU' then report_count  else 0 end as BDU,
case when reportTypeName is null then report_count  else 0 end as NULLREPORT,
report_count as total_report_count
from cte1)

select Cat_Name, Cat_Description ,sum(STR) STR,sum(CTR) CTR,sum(NTR) NTR,sum(EFT) EFT,sum(CCR) CCR,sum(BDU) BDU ,sum(NULLREPORT) NULL_REPORT, sum(total_report_count)total_report_count 
from cte2 c2 group by Cat_Name,  Cat_Description order by total_report_count desc


cte3 as ( select  Cat_Description, Cat_Name ,report_count, reportTypeName from cte1 c1 inner join cte2 c2 on c2.[lineOfBusinessId]= c1.reId)
select * from cte3 
___________________________________________________________________________
7 Insufficient GOS < 500
select coalesce([oldREId],[newREId]) as FIUREID,trim(upper([name])) as RE_NAME,count(distinct r.id_) report_count
 

	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.reId = re.id_
	inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Gos] (nolock) gs on r.id_=gs.reportId
	and r.migrated_flag is null and  r.status=35 and re.active_=1
	and b.reportTypeName  = 'STR'  and len(gosTextNarration)  < 500
	and   substring( [fiuBatchId],1,8) between 20230501  and 20230531
	group by coalesce([oldREId],[newREId]), trim(upper([name]))
_______________________________________________________________________________

select coalesce([oldREId],[newREId]) as FIUREID,trim(upper([name])) as RE_NAME,count(distinct r.id_) report_count
 

	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.reId = re.id_
	inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Gos] (nolock) gs on r.id_=gs.reportId
	and r.migrated_flag is null and  r.status=35 and re.active_=1
	and b.reportTypeName  = 'STR'  --and len(gosTextNarration)  500
	and   substring( [fiuBatchId],1,8) between 20230501  and 20230531
	group by coalesce([oldREId],[newREId]), trim(upper([name]))


_________________________________________________________________________

8- Count of Non-receipts (NTR)
with cte1 as( select b.id_  ,r.id_ as reportid , coalesce([oldREId],[newREId]) as FIUREID,trim(upper([name])) as RE_NAME
 
	
	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.reId = re.id_
	where r.migrated_flag is null and  r.status=35 and re.active_=1
	and b.reportTypeName = 'NTR'
	and substring( [fiuBatchId],1,8) between 20230501  and 20230531 ),

cte2 as (SELECT Batchid, [transactionType]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsOne]
  where [transactionType]='Debit'
  union 
  SELECT Batchid, [transactionType]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsTwo]
  where [transactionType]='Debit'
  union 
  SELECT Batchid, [transactionType]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsThree]
  where [transactionType]='Debit'
  union 
  SELECT Batchid,[transactionType]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsFour]
  where [transactionType]='Debit'
  union 
  SELECT Batchid,[transactionType]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsFive]
  where [transactionType]='Debit'
  union 
  SELECT Batchid,[transactionType]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsSeven]
  where [transactionType]='Debit'
  union 
  SELECT Batchid,[transactionType]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsNine]
  where [transactionType]='Debit'
  union 
  SELECT Batchid,[transactionType]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsEleven]
  where [transactionType]='Debit'
  union 
  SELECT Batchid,[depositWithdrawal]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TcOne]
  where [depositWithdrawal]='Deposit'
  union 
  SELECT Batchid,[depositeWithdrawl]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TcTwo]
  where [depositeWithdrawl] ='Deposit')
  
  select FIUREID ,RE_NAME, count(distinct c1.reportid ) Non_receipts from cte1 c1 inner join cte2 c2 on c2.Batchid=c1.id_
  group by FIUREID ,RE_NAME order by Non_receipts desc
____________________________________________________________________
9-  NTR Below threshold

with cte1 as( select  b.id_  ,r.id_ report_count, coalesce([oldREId],[newREId]) as FIUREID,trim(upper([name])) as RE_NAME
 
	
	from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b 
	join  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on  b.id_ = r.batchId
	join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.reId = re.id_
	where r.migrated_flag is null and  r.status=35 and re.active_=1
	and b.reportTypeName = 'NTR'
	and substring( [fiuBatchId],1,8) between 20230501  and 20230518
	 ),

	cte2 as (SELECT  reportid, [amount] from (select reportid, floor([amount])[amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsOne]
  where floor([amount]) <1000000
  union 
  SELECT  reportid, floor([amount])[amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsTwo]
  where floor([amount]) <1000000
  union 
  SELECT  reportid, floor([transactionAmount])  [amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsThree]
  where floor([transactionAmount]) <1000000
  union 
  SELECT  reportid, floor([transactionAmount]) [amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsFour]
  where floor([transactionAmount]) <1000000
  union 
  SELECT  reportid,floor([amount])[amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsFive]
  where floor([amount]) <1000000
  union 
  SELECT  reportid,floor([amount])[amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsSeven]
  where floor([amount]) <1000000
  union 
  SELECT  reportid,floor([amount])[amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsNine]
  where floor([amount]) <1000000
  union 
  SELECT  reportid, floor([amountInInr]) [amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TsEleven]
  where floor([amountInInr]) <1000000
  union 
  SELECT   reportid,floor([transactionAmount]) [amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TcOne]
  where floor([transactionAmount]) <1000000
  union 
  SELECT  reportid,floor([amount])[amount]
  FROM [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_TcTwo]
  where floor([amount]) <1000000)z)

  
  select FIUREID ,RE_NAME, count( report_count)report_count, count(distinct c2.reportid ) below_thresholds from cte1 c1 inner join cte2 c2 on c2.reportid=c1.id_
  group by FIUREID ,RE_NAME order by below_thresholds desc


-----------------------------------------------------------------------------------------------
Query 2 For Finnet 2.0 help desk

select distinct coalesce([oldREId],[newREId]) as fiureid,trim(upper(re.name)) as entityname,concat('ID-',cast([fiuBatchId] as varchar)) fiubatchid,r.reportRefNo,
CONCAT_WS('|',concat('ID-',[fiuBatchId]),r.reportRefNo) brn, pd.[pan],gosTextNarration gos,[gosTag2] source_of_alert,
concat(pd.firstName,' ',pd.middleName,' ',pd.lastName) as personname,
pd.primaryAddressLine1 as address,pin.pinCodeNumber as Pincode,kyc.profession as occupation,nn.title as nationality,
pd.telephoneNumber as telephone, pd.mobileNumber as mobile, pd.email,kyc.entityName as mainpersonname,
concat('A-',ad.accountNumber) as accountnumber,ifsc, adr.pinCode as Branch_PinCode,b.reportTypeName
from  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on b.id_ = r.batchId
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.[reId] = re.id_
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Gos] (nolock) gs on r.id_=gs.reportId
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_AccountDetail] ad on r.Id_=ad.reportid
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_KycSummary] kyc on r.id_=kyc.reportId
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_PersonDetail] pd on pd.reportId=r.id_
--inner join [Fincore_Bridge_DB].[FINCORE_BRIDGE].[fingate_AccountPerson] ap on ap.id_ = r.id_
--inner join [DATAHUB_DB].[FIUMetaHub].[finnet_AcHolderType] actype on ap.relationTypeId = actype.id_
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_PinCode] pin on pin.id_ = pd.primaryPinCode
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_Nationality] nn on nn.id_=pd.nationality
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_ReBranch] reb on ad.branchCode=reb.branchId
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_Address] adr on reb.id_ = adr.parentid and adr.parentclass = 'REBranch' 
and r.migrated_flag is null and re.active_=1
and fiuBatchId in ('2023070610156154','2023070710138484')-- '202307%'
--where CONCAT_WS('|',[fiuBatchId],r.reportRefNo) =  ('2023070610156154') --enter fiubatchid|reportrefno here --2023051100119974
--2023070610156154
--and trim(kyc.entityName) like ('Jyotisha%')


Query 1 For Finnet 2.0 help desk

with cte1 as (
select distinct coalesce([oldREId],[newREId]) as fiureid,trim(upper([name])) as entityname,concat('ID-',cast([fiuBatchId] as varchar)) fiubatchid,
r.[reportRefNo],concat('ID-',cast([fiuBatchId] as varchar),'|',cast(reportrefno as varchar)) as brn,gosTextNarration gos,[gosTag2] source_of_alert,kyc.entityName as mainpersonname,b.reportTypeName
from  [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload](nolock) b
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report](nolock) r on b.id_ = r.batchId
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.[reId] = re.id_
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Gos] (nolock) gs on r.id_=gs.reportId
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_KycSummary] kyc on r.id_=kyc.reportId
and r.migrated_flag is null and re.active_=1 and kyc.primaryEntity = 'Yes'

where CONCAT_WS('|',[fiuBatchId],r.reportRefNo) in ()
)

select * from cte1


-----------------------------------------------------------------

sumit ji JNK bank details concat pan

with cte1 as (select distinct recategory,b.fiureid, entityname,B.BATCHID,R.RPTSERNUM,
REPORTTYPE,MAINPERSONNAME,SOURCEOFALERT,SUBSTRING(cast(b.batchid as varchar), 1, 4) as year_month
from [FINCORE_BACKUP_CC].[BATCH] (nolock) b
inner join [FINCORE_BACKUP_CC].[REPORT](nolock) r
on b.batchid=r.batchid where b.fiureid in ('BASCB00076','BARRB00265')
and b.BATCHID between 1804010000 and 2305319999
and REPORTTYPE='CTR'
and REPORTFORMATTYPE='ARF'
and b.batchid not in ((select distinct originalbatchid from [FINCORE_BACKUP_CC].[BATCH]  
union 
select distinct batchid from [FINCORE_BACKUP_CC].[BATCH] b2 where  batchtype ='D')))
,
cte2 as(select cte1.*,concat('A-',ACCOUNTNUM)accountNo,amount,sum(amount) as total_amount,count(amount) as counts,
case when DEBITCREDIT ='C' then 'Credit' when DEBITCREDIT ='D' then 'Debit' else 'Not Categorized'
end as debitcredit
from [FINCORE_BACKUP_CC].[ARFTRN] atr (nolock) 
inner join cte1 on cte1.batchid=atr.batchid and cte1.rptsernum=atr.rptsernum
where atr.batchid between 1804010000 and 2305319999
group by concat('A-',ACCOUNTNUM),amount,debitcredit,recategory,cte1.fiureid,entityname,cte1.batchid,cte1.rptsernum
,cte1.REPORTTYPE,cte1.MAINPERSONNAME,cte1.SOURCEOFALERT,cte1.year_month
),
cte3 as (select distinct pan,personname,MOBILE,'arfinp' as source,cte2.* from [FINCORE_BACKUP_CC].[ARFINP] inp (nolock) 
inner join cte2 on cte2.batchid=inp.BATCHID and cte2.rptsernum=inp.rptsernum
where inp.batchid between 1804010000 and 2305319999 and RELATIONFLAG='A'
union
select distinct pan,personname,MOBILE,'arflpe' as source,cte2.* from [FINCORE_BACKUP_CC].[ARFLPE] lpe (nolock)
inner join cte2 on cte2.batchid=lpe.BATCHID and cte2.rptsernum=lpe.rptsernum
where lpe.batchid between 1804010000 and 2305319999 and RELATIONFLAG='A'
)
select top 20 *,SUBSTRING(pan,4,1) as pan_type from cte3 

----------------------------------------------------------------------------------------

sumit ji JNK bank details concat pan

with cte1 as
(
select distinct batchid,REPORTFORMATTYPE,REPORTTYPE,lower(ENTITYNAME) as entityname,FIUREID from [FINCORE_BACKUP_CC].[BATCH]
where batchid between 1804010000 and 2305319999
--and REPORTTYPE<>'CTR'
and fiureid in ('BARRB00265','BASCB00076')
and batchid not in (select distinct originalbatchid from [FINCORE_BACKUP_CC].[BATCH]  union select distinct batchid from [FINCORE_BACKUP_CC].[BATCH] b2 where  batchtype ='D') 
),

cte2 as
(
select pan,batchid,rptsernum,RELATIONFLAG, mobile,email, COMMADDRESS,OCCUPATION,PERSONNAME,concat('A-',ACCOUNTNUM) as account_num from [FINCORE_BACKUP_CC].[ARFINP] --where RELATIONFLAG='A'
where batchid between 1804010000 and 2305319999 and pan is not null
union
select pan,batchid,rptsernum,RELATIONFLAG,mobile,email, COMMADDRESS,NATUREOFBUSINESS,PERSONNAME,concat('A-',ACCOUNTNUM) as account_num from [FINCORE_BACKUP_CC].[ARFLPE] --where RELATIONFLAG='A'
where batchid between 1804010000 and 2305319999 and pan is not null
union
select pan,batchid,rptsernum,INSTRELATIONFLAG,MOBILE,EMAIL,ADDRESS as COMMADDRESS,OCCUPATION,CUSTOMERNAME as PERSONNAME,concat('A-',ACCOUNTNUM) as account_num from [FINCORE_BACKUP_CC].[TRFTRN] 
where batchid between 1804010000 and 2305319999 and pan is not null
)

select cte2.*,cte1.REPORTFORMATTYPE,cte1.REPORTTYPE,cte1.ENTITYNAME,fiureid from cte2 inner join cte1 on cte1.batchid=cte2.batchid

----------------------------------------------------------------------------------------

PAN based reporttype grouping and count

with report_count as (select pan, sum(case when reporttype='CTR' then cc end ) CTR,
sum(case when reporttype='STR' then cc end ) STR,
sum(case when reporttype='EFT' then cc end ) EFT,
sum(case when reporttype='NTR' then cc end ) NTR,
sum(cc) total from(
select pan, reporttype, count( distinct batchid||rptsernum)cc from jnkbank.all_pan_data
group by pan,reporttype)z
group by pan
order by total desc),

pan_details as (select pan, string_agg(distinct personname,',')personname, string_agg(distinct mobile,',')mobile, 
string_agg(distinct email,',')email, string_agg(distinct occupation,',')occupation
from  jnkbank.all_pan_data
group by pan) 

select pan,ctr, str, eft,ntr,total,substring(personname,1,4000)personname,mobile,substring(email,1,4000)email,substring(occupation,1,4000)occupation from(
select r.*, personname,mobile,email,occupation from report_count r left join pan_details p on r.pan=p.pan)zzz
order by total desc

-------------------------------------------------------------------------------------
copy csv file on server 172.16.22.15 from winscp

Username:appadmin1
Password:FinNet@2021
use putty "\copy jnkbank.all_pan_data FROM /data1/pgsql_data/pan_inplpe_dump_220923.csv delimiter ',' csv header"
------------------------------------------------------------------------------------
Check for column names

SELECT c.name AS ColName, t.name AS TableName
FROM sys.columns c
    JOIN sys.tables t ON c.object_id = t.object_id
WHERE c.name LIKE 'pan%';

-------------------------------------------------------------------------------

SELECT distinct fc.caseid,fc.approvalsubmitdate as dissemination_date,fc.batchid,fc.reportrequestserialnum,fc.fiureidagencyid,fc.recategory,fc.feedbackpriority,fc.casepriority,fc.mainpersonname  FROM [dbo].[feedback_data] fb inner join [dbo].[fincase_final] fc on fb.caseid=fc.caseid
where caseaction='D' and casestatus in ('D','E') and fb.isinformationuseful='1' and TRY_CONVERT(DATETIME,FC.approvalsubmitdate) < '2023-06-30 00:00:00.000'-- AND '2018-04-01 00:00:00.000'

-----------------------------------------------------------------------------
For CTR,STR,NTR Finnet 1.0

with cte1 as
(
select distinct ENTITYNAME as REName,fiureid,REPORTFORMATTYPE,REPORTTYPE,r.batchid,r.RPTSERNUM,r.GROUNDSOFSUSP,r.DETAILSOFINVESTIGATIONS,r.MAINPERSONNAME,r.SOURCEOFALERT,
SUBSTRING(cast(r.batchid as varchar),1,2) AS yearofreport,SUBSTRING(cast(r.batchid as varchar),3,2) AS monthofreport
from [FINCORE_BACKUP_CC].[BATCH] b inner join [FINCORE_BACKUP_CC].[REPORT] r on b.batchid=r.batchid
where b.batchid not in (select distinct originalbatchid from [FINCORE_BACKUP_CC].[BATCH]  union select distinct batchid from [FINCORE_BACKUP_CC].[BATCH] b2 where  batchtype ='D')
and CONCAT_WS('|',r.batchid,rptsernum) not in (select CONCAT_WS('|',iso.batchid,iso.reportserialnum) from [dbo].[isolated] iso)
--and CONCAT_WS('|',r.batchid,rptsernum) in ()
and b.batchid>1804010000
),

cte2 as
(
select pan,batchid,rptsernum,PERSONNAME,COMMADDRESS,COMMCITY,COMMPINCODE,RELATIONFLAG,MOBILE,IDENTIFICATIONNUMBER,OCCUPATION,NATIONALITY from [FINCORE_BACKUP_CC].[ARFINP] 
where batchid in (select distinct batchid from cte1)
--where pan='AABCZ5002H'
--where trim(upper(PERSONNAME)) like ('%Central European University%')
union
select pan,batchid,RPTSERNUM,PERSONNAME,COMMADDRESS,COMMCITY,COMMPINCODE,RELATIONFLAG,MOBILE,'NA' as IDENTIFICATIONNUMBER,NATUREOFBUSINESS as occupation,'NA' as nationality from [FINCORE_BACKUP_CC].[ARFlpe] 
where batchid in (select distinct batchid from cte1)
--where pan='AABCZ5002H'
--where trim(upper(PERSONNAME)) like ('%Central European University%')
union
select pan,batchid,rptsernum,CUSTOMERNAME,ADDRESS,CITY,PINCODE,'NA' as relationflag,MOBILE,'NA' as IDENTIFICATIONNUMBER,OCCUPATION,NATIONALITY from [FINCORE_BACKUP_CC].[TRFTRN]
where batchid in (select distinct batchid from cte1)
),
cte3 as 
(
select batchid,rptsernum,DEBITCREDIT,amount from [FINCORE_BACKUP_CC].[ARFTRN] where batchid in (select distinct batchid from cte1)
--union
--select batchid,rptsernum,TRANSACTIONTYPE,AMOUNTRUPEES from [FINCORE_BACKUP_CC].[trftrn] where batchid in (select distinct batchid from cte1)
),

cte4 as 
(
select batchid,rptsernum,concat('A-',ACCOUNTNUM) as account,BRANCHEMAIL,ADDRESS as branch_address,city as branch_city from [FINCORE_BACKUP_CC].[ARFBRC]
where batchid in (select distinct batchid from cte1)
--and concat('A-',ACCOUNTNUM) in ()
)

select * from 
(
select c1.BATCHID,c1.RPTSERNUM,c1.REName,c1.FIUREID,c1.REPORTFORMATTYPE,c1.REPORTTYPE,c1.GROUNDSOFSUSP,c1.DETAILSOFINVESTIGATIONS,c1.MAINPERSONNAME,c1.SOURCEOFALERT,
c1.yearofreport,c1.monthofreport,
c2.pan,c2.PERSONNAME,c2.COMMADDRESS,c2.COMMCITY,c2.COMMPINCODE,c2.RELATIONFLAG,c2.MOBILE,c2.IDENTIFICATIONNUMBER,c2.OCCUPATION,c2.NATIONALITY,
c3.DEBITCREDIT,c3.AMOUNT,
c4.account,c4.BRANCHEMAIL,c4.branch_address,c4.branch_city from cte1 c1 
inner join cte2 c2 on c1.batchid=c2.batchid and c1.RPTSERNUM=c2.RPTSERNUM
inner join cte3 c3 on c1.batchid=c3.batchid and c3.RPTSERNUM=c1.RPTSERNUM
inner join cte4 c4 on c1.batchid=c4.batchid and c1.rptsernum=c4.rptsernum
)z

--------------------------------------------------------------------------------

with cte1 as(
select distinct ENTITYNAME as REName,fiureid,REPORTFORMATTYPE,REPORTTYPE,r.batchid,r.RPTSERNUM,r.GROUNDSOFSUSP,r.DETAILSOFINVESTIGATIONS,r.MAINPERSONNAME,
SUBSTRING(cast(r.batchid as varchar),1,2) AS yearofreport,SUBSTRING(cast(r.batchid as varchar),3,2) AS monthofreport
from [FINCORE_BACKUP_CC].[BATCH] b inner join [FINCORE_BACKUP_CC].[REPORT] r on b.batchid=r.batchid
where b.batchid not in (select distinct originalbatchid from [FINCORE_BACKUP_CC].[BATCH]  union select distinct batchid from [FINCORE_BACKUP_CC].[BATCH] b2 where  batchtype ='D') 
and CONCAT_WS('|',r.batchid,rptsernum) in ('2102229895|304078', '2110124710|446125', '2206301672|7', '2004048362|16001', '2208251397|327821', '2207213976|5', '2209208103|1'))

select * from (select c1.REName,c1.FIUREID,c1.REPORTFORMATTYPE,c1.REPORTTYPE,tr.* from [FINCORE_BACKUP_CC].[TRFTRN] tr inner join cte1 c1 on tr.batchid=c1.BATCHID)z

-------------------------------------------------------------------------------

=IF(MONTH(A2)<4,YEAR(A2)-1 & "-" & YEAR(A2),YEAR(A2) & "-" & YEAR(A2)+1)

------------------------------------------------------------------------------

SELECT DISTINCT fiureid, entityname, fiubatchid, reportrefno, brn, gos, source_of_alert, mainpersonname, entitytype, profession, status,
regexp_matches(upper(TRIM(BOTH FROM gos)),'RBI|09.05.2023|09-05-2023|09TH MAY 2023|MAY 09, 2023|09/05/2023|9-5-23' ,'ig'::text) AS regexp_matches
FROM str_prioritization3.str_rajat_2 

------------------------------------------------------------------------------

FINNET 2.0 dipto query

with cte1 as ( select distinct id_,batchid, fiuBatchId,reportRefNo,reportTypeFlag 
from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Report] where migrated_flag is null and fiuBatchId in ('2023070610156154','2023070710138484','2023061000157333')),

cte2 as (
select batchid,pd.reportid, pd.ucic, PAN, concat(firstname,' ', middlename,' ',lastname) personname, 
pd.primaryAddressLine1 as address,primaryPinCode as person_Pincode , pd.nationality , pd.telephoneNumber as telephone, pd.mobileNumber as mobile, email from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_PersonDetail] (nolock) pd 
where pd.reportid in (select distinct id_ from cte1)  
    union
select batchid, ed.reportid, ed.ucic, PAN, ed.name as personname , ed.addressLine1 as address, pinCode as person_Pincode ,ed.regCountry as nationality, telephoneNumber, mobileNumber, emailId
from [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_EntityDetail] (nolock) ed where ed.reportid in (select distinct id_ from cte1)),

cte3 as ( select reportid, ucic  from( select reportid, ucic, count(distinct pan) pan_count from cte2 group by reportid, ucic)z where pan_count =1),

cte4 as (select * from cte2 where concat(reportid, ucic) in (select concat(reportid, ucic) from cte3))

select distinct coalesce([oldREId],[newREId]) as fiureid,trim(upper(re.name)) as entityname,concat('ID-',cast([fiuBatchId] as varchar)) fiubatchid,r.reportRefNo,
CONCAT_WS('|',concat('ID-',[fiuBatchId]),r.reportRefNo) brn,pincode, state_,ifsc, cte4.reportid, cte4.PAN,personname, address,person_Pincode,nationality,telephone,mobile,email,
reportTypeFlag,  gosTextNarration gos,[gosTag2] source_of_alert,kyc.entityName as mainpersonname from cte1 r
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_BatchUpload] b on b.id_ = r.batchId
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_ReportingEntity] re (nolock) on b.[reId] = re.id_
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_AccountDetail] ad on r.Id_=ad.reportid
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_ReBranch] reb on ad.branchCode=reb.branchId
inner join [DATAHUB_DB].[FIUMetaHub].[finnet_Address] adr on reb.id_ = adr.parentid and adr.parentclass = 'REBranch' and re.active_=1
inner join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_AccountPerson] ap on ap.accountNo=ad.accountNumber and ap.reportid=ad.reportId 
inner join  cte4 on cte4.reportid=ap.reportid and cte4.ucic=ap.ucic 
left join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Gos] (nolock) gs on r.id_=gs.reportId
left join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_KycSummary] kyc on r.id_=kyc.reportId
--left join [FINCORE_BRIDGE_DB].[FINCORE_BRIDGE].[fingate_Gos] (nolock) gs on r.id_=gs.reportId
--where fiuBatchId in ('2023070610156154','2023070710138484','2023061000157333')
